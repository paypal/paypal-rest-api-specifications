{
  "openapi": "3.0.3",
  "info": {
    "title": "Disputes",
    "description": "Occasionally, something goes wrong with a customer's order. To dispute a charge, a customer can create a dispute with PayPal. PayPal merchants, partners, and external developers can use the PayPal Disputes API to manage customer disputes.<blockquote><strong>Note:</strong> In the live environment, merchants cannot create disputes but can only respond to customer-created disputes. However, merchants can create disputes in the sandbox environment. When you create an app, enable Disputes in the App feature options section.</blockquote>A customer can also ask his or her bank or credit card company to dispute and reverse a charge, which is known as a <i>chargeback</i>. For more information, see <a href=\"https://www.paypal.com/us/brc/article/customer-disputes-claims-chargebacks-bank-reversals\">Disputes, claims, chargebacks, and bank reversals</a>.<br/><br/>When a customer disputes a charge, you can use this API to provide evidence that the charge is legitimate. To provide evidence or appeal a dispute, you submit a proof of delivery or proof of refund document or notes, which can include logs.<br/><br/>Normally, an agent at PayPal creates a dispute, updates the dispute status, and settles disputes, but now you can run test cases in the sandbox that complete these operations.<br/><br/><blockquote><strong>Important:</strong> The create, cancel, compute metrics, change reason, and validate eligibility methods are available as a limited-release solution at this time. For more information, reach out to your PayPal account manager.</blockquote><br/>For details, see <a href=\"/docs/integration/direct/customer-disputes/\">Disputes Overview</a> documentation.",
    "version": "1.10"
  },
  "paths": {
    "/v1/customer/disputes": {
      "get": {
        "summary": "List disputes",
        "description": "Lists disputes with a summary set of details, which shows the <code>dispute_id</code>, <code>reason</code>, <code>status</code>, <code>dispute_state</code>, <code>dispute_life_cycle_stage</code>, <code>dispute_channel</code>, <code>dispute_amount</code>, <code>create_time</code> and <code>update_time</code> fields.<br/><br/>To filter the disputes in the response, specify one or more optional query parameters. To limit the number of disputes in the response, specify the <code>page_size</code> query parameter.<br/><br/>To list multiple disputes, set these query parameters in the request:<ul><li><code>page_size=2</code></li><li><code>start_time</code> instead of <code>disputed_transaction_id</code></li></ul><br/>If the response contains more than two disputes, it lists two disputes and includes a HATEOAS link to the next page of results.",
        "operationId": "disputes.list",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP <code>200 OK</code> status code and a JSON response body that lists disputes with a full or summary set of details. Default is a summary set of details, which shows the <code>dispute_id</code>, <code>reason</code>, <code>status</code>, <code>dispute_amount</code>, <code>create_time</code>, and <code>update_time</code> fields for each dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dispute_search"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/start_time"
          },
          {
            "$ref": "#/components/parameters/disputed_transaction_id"
          },
          {
            "$ref": "#/components/parameters/page_size"
          },
          {
            "$ref": "#/components/parameters/next_page_token"
          },
          {
            "$ref": "#/components/parameters/dispute_state"
          },
          {
            "$ref": "#/components/parameters/update_time_before"
          },
          {
            "$ref": "#/components/parameters/update_time_after"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-buyer"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-ebay"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-partner"
            ]
          }
        ],
        "tags": [
          "disputes"
        ]
      }
    },
    "/v1/customer/disputes/{id}": {
      "get": {
        "summary": "Show dispute details",
        "description": "Shows details for a dispute, by ID.<blockquote><strong>Note:</strong> The fields that appear in the response depend on the access. For example, if the merchant requests shows dispute details, the customer's email ID does not appear.</blockquote>",
        "operationId": "disputes.get",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows dispute details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dispute"
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-buyer"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-ebay"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/read-partner"
            ]
          }
        ],
        "tags": [
          "disputes"
        ]
      },
      "patch": {
        "summary": "Partially update dispute",
        "description": "Partially updates a dispute, by ID. Seller can update the `communication_detail` value or The partner can add the `partner action` information.",
        "operationId": "disputes.patch",
        "responses": {
          "202": {
            "description": "A successfully accepted request returns the HTTP `202 Accepted` status code and a JSON response body that includes a [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) to the ID of the request. The Clients can choose webhook option as well to receive dispute update notification.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body."
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patch_request"
              }
            },
            "multipart/related": {
              "schema": {
                "$ref": "#/components/schemas/patch_request"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/patch_request"
              }
            },
            "multipart/mixed": {
              "schema": {
                "$ref": "#/components/schemas/patch_request"
              }
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          }
        ],
        "tags": [
          "disputes"
        ]
      }
    },
    "/v1/customer/disputes/{id}/provide-evidence": {
      "post": {
        "summary": "Provide evidence",
        "description": "Provides evidence for a dispute, by ID. A merchant can provide evidence for disputes with the <code>WAITING_FOR_SELLER_RESPONSE</code> status while customers can provide evidence for disputes with the <code>WAITING_FOR_BUYER_RESPONSE</code> status. Evidence can be a proof of delivery or proof of refund document or notes, which can include logs. A proof of delivery document includes a tracking number while a proof of refund document includes a refund ID. For other evidence type, notes and documents can be given. Evidences requested from you can be found by checking the type of evidence for the corresponding source under the evidence section of the <a href=\"/docs/api/customer-disputes/v1/#disputes_get\">show dispute details</a> response. The source will be <code>REQUESTED_FROM_SELLER</code> for evidences requested from the merchant while it will be <code>REQUESTED_FROM_BUYER</code> for evidences requested from the customer. For constraints and rules regarding documents, see <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#documents\">documents</a>.<br/>To make this request, specify the evidence in the JSON request body and use the <code>provide-evidence</code> link in the <a href=\"/docs/api/reference/api-responses/#hateoas-links/\">HATEOAS links</a> of the <a href=\"/docs/api/customer-disputes/v1/#disputes_get\">show dispute details</a> response. In case the link is not present in the response, you can't provide evidence for the dispute. For information about dispute reasons, see <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#dispute-reasons\">dispute reasons</a>.",
        "operationId": "disputes.provide-evidence",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/evidences"
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-partner"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ]
      }
    },
    "/v1/customer/disputes/{id}/appeal": {
      "post": {
        "summary": "Appeal dispute",
        "description": "Appeals a dispute, by ID. To appeal a dispute, use the <code>appeal</code> link in the <a href=\"/docs/api/reference/api-responses/#hateoas-links/\">HATEOAS links</a> from the show dispute details response. If this link does not appear, you cannot appeal the dispute. Submit new evidence as a document or notes in the JSON request body. For constraints and rules regarding documents, see <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#documents\">documents</a>.<br/>To make this request, specify the dispute ID in the URI and specify the evidence in the JSON request body. For information about dispute reasons, see <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#dispute-reasons\">dispute reasons</a>.",
        "operationId": "disputes.appeal",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/evidences"
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ]
      }
    },
    "/v1/customer/disputes/{id}/accept-claim": {
      "post": {
        "summary": "Accept claim",
        "description": "Accepts liability for a claim, by ID. When you accept liability for a claim, the dispute closes in the customer’s favor and PayPal automatically refunds money to the customer from the merchant's account. Allowed accept_claim_type values for the request is available in dispute details <a href=\"/docs/api/customer-disputes/v1/#definition-allowed_response_options\">allowed response options</a> object.",
        "operationId": "disputes.accept-claim",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "accept-claim-document": {
                    "description": "A file with evidence.",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ]
      }
    },
    "/v1/customer/disputes/{id}/adjudicate": {
      "post": {
        "summary": "Settle dispute",
        "description": "<blockquote><strong>Important:</strong> This method is for sandbox use only.</blockquote> Settles a dispute in either the customer's or merchant's favor. Merchants can make this call in the sandbox to complete end-to-end dispute resolution testing, which mimics the dispute resolution that PayPal agents normally complete. To make this call, the dispute <code>status</code> must be <code>UNDER_REVIEW</code> and <code>adjudicate</code> link  should be available in the <a href=\"/docs/api/customer-disputes/v1/#disputes_get!c=200&path=links&t=response/\">HATEOAS links</a> of the <a href=\"/docs/api/customer-disputes/v1/#disputes_get\">show dispute details</a> response.",
        "operationId": "disputes.adjudicate",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/adjudicate"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/adjudicate"
                }
              }
            },
            "multipart/related": {
              "schema": {
                "$ref": "#/components/schemas/adjudicate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/adjudicate"
              }
            },
            "multipart/mixed": {
              "schema": {
                "$ref": "#/components/schemas/adjudicate"
              }
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ]
      }
    },
    "/v1/customer/disputes/{id}/require-evidence": {
      "post": {
        "summary": "Update dispute status",
        "description": "<blockquote><strong>Important:</strong> This method is for sandbox use only.</blockquote> Updates the status of a dispute, by ID, from <code>UNDER_REVIEW</code> to either:<ul><li><code>WAITING_FOR_BUYER_RESPONSE</code></li><li><code>WAITING_FOR_SELLER_RESPONSE</code></li></ul>This status change enables either the customer or merchant to submit evidence for the dispute. To make this call, the dispute <code>status</code> must be <code>UNDER_REVIEW</code> and <code>require-evidence</code> link  should be available in the <a href=\"/docs/api/customer-disputes/v1/#disputes_get!c=200&path=links&t=response/\">HATEOAS links</a> of the <a href=\"/docs/api/customer-disputes/v1/#disputes_get\">show dispute details</a> response. Specify an <code>action</code> value in the JSON request body to indicate whether the status change enables the customer or merchant to submit evidence:<table><thead><tr align=\"left\"><th>If <code>action</code> is</th><th>The <code>status</code> updates to</th></tr></thead><tbody><tr><td><code>BUYER_EVIDENCE</code></td><td> <code>WAITING_FOR_BUYER_RESPONSE</code></td></tr><tr><td><code>SELLER_EVIDENCE</code></td><td> <code>WAITING_FOR_SELLER_RESPONSE</code></td></tr></tbody></table>.",
        "operationId": "disputes.require-evidence",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/require_evidence"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/require_evidence"
                }
              }
            },
            "multipart/related": {
              "schema": {
                "$ref": "#/components/schemas/require_evidence"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/require_evidence"
              }
            },
            "multipart/mixed": {
              "schema": {
                "$ref": "#/components/schemas/require_evidence"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ]
      }
    },
    "/v1/customer/disputes/{id}/escalate": {
      "post": {
        "summary": "Escalate dispute to claim",
        "description": "Escalates the dispute, by ID, to a PayPal claim. To make this call, the stage in the dispute lifecycle must be `INQUIRY`.",
        "operationId": "disputes.escalate",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/escalate"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/escalate"
                }
              }
            },
            "multipart/related": {
              "schema": {
                "$ref": "#/components/schemas/escalate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/escalate"
              }
            },
            "multipart/mixed": {
              "schema": {
                "$ref": "#/components/schemas/escalate"
              }
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ]
      }
    },
    "/v1/customer/disputes/{id}/send-message": {
      "post": {
        "summary": "Send message about dispute to other party",
        "description": "Sends a message about a dispute, by ID, to the other party in the dispute. Merchants and customers can only send messages if the `dispute_life_cycle_stage` value is `INQUIRY`. For constraints and rules regarding documents that can be attached as part of the message, see <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#documents\">documents</a>. To send a message, use the <code>send-message</code> link in the <a href=\"/docs/api/reference/api-responses/#hateoas-links/\">HATEOAS links</a> of the <a href=\"/docs/api/customer-disputes/v1/#disputes_get\">show dispute details</a> response and specify the message in the JSON request body. In case the link is not present in the response you can't send a message on the dispute.",
        "operationId": "disputes.send-message",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "message_document": {
                    "description": "A file that contains any additional info about the message posted.",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ]
      }
    },
    "/v1/customer/disputes/{id}/make-offer": {
      "post": {
        "summary": "Make offer to resolve dispute",
        "description": "Makes an offer to the other party to resolve a dispute, by ID. To make this call, the stage in the dispute lifecycle must be `INQUIRY`. If the customer accepts the offer, PayPal automatically makes a refund. Allowed offer_type values for the request is available in dispute details <a href=\"/docs/api/customer-disputes/v1/#definition-allowed_response_options\">allowed response options</a> object.",
        "operationId": "disputes.make-offer",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/make_offer"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/make_offer"
                }
              }
            },
            "multipart/related": {
              "schema": {
                "$ref": "#/components/schemas/make_offer"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/make_offer"
              }
            },
            "multipart/mixed": {
              "schema": {
                "$ref": "#/components/schemas/make_offer"
              }
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          },
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ]
      }
    },
    "/v1/customer/disputes/{id}/accept-offer": {
      "post": {
        "summary": "Accept offer to resolve dispute",
        "description": "The customer accepts the offer from merchant to resolve a dispute, by ID. PayPal automatically refunds the amount proposed by merchant to the customer.",
        "operationId": "disputes.accept-offer",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "202": {
            "description": "A successfully accepted request returns the HTTP `202 Accepted` status code and a JSON response body that includes a [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) to the ID of the request. The request returns `202 Accepted` status in case money movement for the offer is delayed due to some internal reasons.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/accept_offer"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/accept_offer"
                }
              }
            },
            "multipart/related": {
              "schema": {
                "$ref": "#/components/schemas/accept_offer"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/accept_offer"
              }
            },
            "multipart/mixed": {
              "schema": {
                "$ref": "#/components/schemas/accept_offer"
              }
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ]
      }
    },
    "/v1/customer/disputes/{id}/deny-offer": {
      "post": {
        "summary": "Deny offer to resolve dispute",
        "description": "Denies an offer that the merchant proposes for a dispute, by ID.",
        "operationId": "disputes.deny-offer",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deny_offer"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/deny_offer"
                }
              }
            },
            "multipart/related": {
              "schema": {
                "$ref": "#/components/schemas/deny_offer"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/deny_offer"
              }
            },
            "multipart/mixed": {
              "schema": {
                "$ref": "#/components/schemas/deny_offer"
              }
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-buyer"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ]
      }
    },
    "/v1/customer/disputes/{id}/acknowledge-return-item": {
      "post": {
        "summary": "Acknowledge returned item",
        "description": "Acknowledges that the customer returned an item for a dispute, by ID. A merchant can make this request for disputes with the `MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED` reason. Allowed acknowledgement_type values for the request is available in dispute details <a href=\"/docs/api/customer-disputes/v1/#definition-allowed_response_options\">allowed response options</a> object. For constraints and rules regarding documents, see <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#documents\">documents</a>.",
        "operationId": "disputes.acknowledge-return-item",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "acknowledgement_document": {
                    "description": "A file with evidence.",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ]
      }
    },
    "/v1/customer/disputes/{id}/provide-supporting-info": {
      "post": {
        "summary": "Provide supporting information for dispute",
        "description": "Provides supporting information for a dispute, by ID. A merchant or buyer can make this request for disputes if they find the `provide-supporting-info` link in the HATEOAS links in the list disputes response. The party can provide the supporting information to PayPal to defend themselves only when the `dispute_life_cycle_stage` is `CHARGEBACK`, `PRE_ARBITRATION`, or `ARBITRATION`. They can provide a note that describes their part with details or upload any supporting documents to support their side. For constraints and rules regarding documents, see <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#documents\">documents</a>.<br/>To make this request, specify the dispute ID in the URI and specify the notes in the JSON request body. This method differs from the provide evidence method which supports only multipart request, where PayPal asks the concerned party for evidence.",
        "operationId": "disputes.provide-supporting-info",
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that includes a link to the dispute.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subsequent_action"
                }
              }
            }
          },
          "400": {
            "description": "The request failed due to a validation error. The request returns the HTTP `400 Bad Request` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "The request failed due to the dispute is not available. The request returns the HTTP `404 Not Found` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "The requested action could not be completed. The request returns the HTTP `422 Unprocessable Entity` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "An internal server error occurred. The request returns the HTTP `500 Internal Server Error` status code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "default": {
            "description": "The error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/content_type"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "supporting document": {
                    "description": "A file with evidence.",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/disputes/update-seller",
              "https://uri.paypal.com/services/disputes/update-buyer",
              "https://uri.paypal.com/services/disputes/update-partner"
            ]
          }
        ],
        "tags": [
          "disputes-actions"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "disputes",
      "description": "Use the `/disputes` resource to list disputes, create disputes, show dispute details, and partially a dispute. Normally, an agent at PayPal creates disputes but now you can run test cases in the sandbox that create disputes."
    },
    {
      "name": "disputes-actions",
      "description": "Use the `/disputes` resource with a dispute ID and an action to:<ul><li>Accept a claim.</li><li>Accept an offer to resolve a dispute.</li><li>Acknowledge the return of an item related to a dispute.</li><li>Settle a dispute.</li><li>Appeal a dispute.</li><li>Cancel a dispute.</li><li>Change the reason for a dispute.</li><li>Deny an offer to resolve dispute.</li><li>Escalate a dispute to a claim.</li><li>Make an offer to resolve a dispute.</li><li>Make an offer to resolve a dispute.</li><li>Provide evidence for a dispute.</li><li>Provide supporting information for dispute.</li><li>In the sandbox, update the dispute status.</li><li>Send a message about a dispute to the other party in the dispute.</li><ul>"
    },
    {
      "name": "referred-disputes",
      "description": "Use the `/customer/referred-disputes` resource to create a dispute for a referred case that was created by a partner or marketplace, show details for a referred dispute, by ID, notify referred refunds completed to PayPal, notify PayPal about referred dispute adjudication updates, and determine the dispute eligibility for referred disputes."
    },
    {
      "name": "validate-eligibility",
      "description": "Use the `/validate-eligibility/` resource to determine whether you can create a case for a transaction."
    },
    {
      "name": "compute-metrics",
      "description": "Use the `/compute-metrics` resource to provide metrics for all disputes."
    },
    {
      "name": "validate-referred-dispute-eligibility",
      "description": "Use the `/validate-referred-dispute-eligibility` resource to determine whether you can create a referred case for a transaction, by encrypted transaction ID."
    },
    {
      "name": "referred-disputes",
      "description": "Use the `/referred-disputes` resource to create a dispute for a referred case that was created by a partner or marketplace, show details for a referred dispute, by ID, notify referred refunds completed to PayPal, notify PayPal about referred dispute adjudication updates, and determine the dispute eligibility for referred disputes."
    },
    {
      "name": "referred-disputes-actions",
      "description": "Use the `/referred-disputes` resource with a dispute ID and an action to notify PayPal about adjudication updates for a referred dispute and notify PayPal about a refund for a referred dispute."
    },
    {
      "name": "partner-actions",
      "description": "Use the `/disputes/{id}/partner-actions/` resource to show dispute action details and partially update a dispute action."
    },
    {
      "name": "search-suggestions",
      "description": "Use the `/search-suggestions` resource to show search suggestions."
    },
    {
      "name": "dispute-events",
      "description": "Use the `/dispute-events` resource to send dispute events."
    },
    {
      "name": "refund-preference",
      "description": "Use the `/disputes/{id}/provide-refund-preference` resource to provide refund preferences for the dispute."
    }
  ],
  "externalDocs": {
    "url": "https://developer.paypal.com/docs/api/customer-disputes/v1/"
  },
  "servers": [
    {
      "url": "https://api-m.sandbox.paypal.com",
      "description": "PayPal Sandbox Environment"
    },
    {
      "url": "https://api-m.paypal.com",
      "description": "PayPal Live Environment"
    }
  ],
  "components": {
    "requestBodies": {
      "evidences": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "evidence-file": {
                  "description": "A file with evidence.",
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Oauth2": {
        "type": "oauth2",
        "description": "Oauth 2.0 authentication",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/v1/oauth2/token",
            "scopes": {
              "https://uri.paypal.com/services/disputes/read-seller": "This privilege allows client to read and search a disputes of a merchant but gets only a limited and allowed set of fields back .",
              "https://uri.paypal.com/services/disputes/read-buyer": "This privilege allows client to read and search disputes but returns a limited and allowed set of fields back.",
              "https://uri.paypal.com/services/disputes/read-ebay": "This privilege allows client to read and search a disputes of an user but gets only a limited and allowed set of fields back to ebay.",
              "https://uri.paypal.com/services/disputes/read": "This privilege allows client to read and search a dispute of an user with all fields.",
              "https://uri.paypal.com/services/disputes/webhooks": "This privilege allows webhook platform to read a dispute event",
              "https://uri.paypal.com/services/disputes/create": "This privilege allows client to validate eligibility and create a dispute on his transaction(s).",
              "https://uri.paypal.com/services/disputes/update-seller": "This privilege allows client to update a dispute (Merchant actions).",
              "https://uri.paypal.com/services/disputes/update-buyer": "This privilege allows client to update a dispute (customer actions).",
              "https://uri.paypal.com/services/referred-disputes/readwrite": "This privilege allows client to read and update a referred dispute.",
              "https://uri.paypal.com/services/disputes/read-partner": "This privilege allows client to read and search disputes but returns a limited and allowed set of fields back.",
              "https://uri.paypal.com/services/disputes/update-partner": "This privilege allows client to update a dispute (Partner actions)."
            }
          }
        }
      }
    },
    "parameters": {
      "start_time": {
        "name": "start_time",
        "in": "query",
        "description": "Filters the disputes in the response by a creation date and time. The start time must be within the last 180 days. Value is in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.<br/><br/>You can specify either but not both the `start_time` and `disputed_transaction_id` query parameters.",
        "deprecated": true,
        "schema": {
          "type": "string",
          "minLength": 20,
          "maxLength": 64,
          "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
          "default": "Current date and time"
        }
      },
      "disputed_transaction_id": {
        "name": "disputed_transaction_id",
        "in": "query",
        "description": "Filters the disputes in the response by a transaction, by ID.<br/><br/>You can specify either but not both the `start_time` and `disputed_transaction_id` query parameter.",
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[0-9A-Z_]+$"
        }
      },
      "page_size": {
        "name": "page_size",
        "in": "query",
        "description": "Limits the number of disputes in the response to this value.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 10
        }
      },
      "next_page_token": {
        "name": "next_page_token",
        "in": "query",
        "description": "The token that describes the next page of results to fetch. The <a href=\"/docs/api/customer-disputes/v1/#disputes_list\">list disputes</a> call returns this token in the HATEOAS links in the response.",
        "deprecated": true,
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9+\\/=]+$",
          "default": "The first page of data"
        }
      },
      "dispute_state": {
        "name": "dispute_state",
        "in": "query",
        "description": "Filters the disputes in the response by a state. Separate multiple values with a comma (`,`). When you specify more than one dispute_state, the response lists disputes that belong to any of the specified dispute_state.",
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2000,
          "pattern": "^[0-9A-Z_]+$",
          "enum": [
            "REQUIRED_ACTION",
            "REQUIRED_OTHER_PARTY_ACTION",
            "UNDER_PAYPAL_REVIEW",
            "RESOLVED",
            "OPEN_INQUIRIES",
            "APPEALABLE"
          ]
        }
      },
      "update_time_before": {
        "name": "update_time_before",
        "in": "query",
        "description": "The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`. update_time_before must be within the last 180 days and the default is the current time.",
        "schema": {
          "type": "string",
          "format": "ppaas_date_time_v3",
          "minLength": 20,
          "maxLength": 64,
          "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$"
        }
      },
      "update_time_after": {
        "name": "update_time_after",
        "in": "query",
        "description": "The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`. update_time_after must be within the last 180 days and the default is the maximum time (180 days) supported.",
        "schema": {
          "type": "string",
          "format": "ppaas_date_time_v3",
          "minLength": 20,
          "maxLength": 64,
          "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$"
        }
      },
      "id": {
        "name": "id",
        "in": "path",
        "description": "The ID of the dispute for which to provide the supporting information.",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[A-Za-z0-9-]+$"
        }
      },
      "content_type": {
        "name": "Content-Type",
        "in": "header",
        "description": "Content type of the request payload.",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "\\w+\\/[-+.\\w]+"
        }
      }
    },
    "schemas": {
      "error_details": {
        "title": "Error Details",
        "type": "object",
        "description": "The error details. Required for client-side `4XX` errors.",
        "properties": {
          "field": {
            "type": "string",
            "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors."
          },
          "value": {
            "type": "string",
            "description": "The value of the field that caused the error."
          },
          "location": {
            "type": "string",
            "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`.",
            "default": "body"
          },
          "issue": {
            "type": "string",
            "description": "The unique, fine-grained application-level error code."
          },
          "description": {
            "type": "string",
            "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value."
          }
        },
        "required": [
          "issue"
        ]
      },
      "error_link_description": {
        "title": "Link Description",
        "description": "The request-related [HATEOAS link](/api/rest/responses/#hateoas-links) information.",
        "type": "object",
        "required": [
          "href",
          "rel"
        ],
        "properties": {
          "href": {
            "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20000,
            "pattern": "^.*$"
          },
          "rel": {
            "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml).",
            "type": "string",
            "minLength": 0,
            "maxLength": 100,
            "pattern": "^.*$"
          },
          "method": {
            "description": "The HTTP method required to make the related call.",
            "type": "string",
            "minLength": 3,
            "maxLength": 7,
            "pattern": "^[A-Z]*$",
            "enum": [
              "CONNECT",
              "DELETE",
              "GET",
              "HEAD",
              "OPTIONS",
              "PATCH",
              "POST",
              "PUT"
            ]
          }
        }
      },
      "error_default": {
        "description": "The default error response.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/error_400"
          },
          {
            "$ref": "#/components/schemas/error_401"
          },
          {
            "$ref": "#/components/schemas/error_403"
          },
          {
            "$ref": "#/components/schemas/error_404"
          },
          {
            "$ref": "#/components/schemas/error_409"
          },
          {
            "$ref": "#/components/schemas/error_415"
          },
          {
            "$ref": "#/components/schemas/error_422"
          },
          {
            "$ref": "#/components/schemas/error_500"
          },
          {
            "$ref": "#/components/schemas/error_503"
          }
        ]
      },
      "error_400": {
        "type": "object",
        "title": "Bad Request Error",
        "description": "Request is not well-formed, syntactically incorrect, or violates schema.",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "INVALID_REQUEST"
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "Request is not well-formed, syntactically incorrect, or violates schema."
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error_details"
            }
          },
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes."
          },
          "links": {
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).",
            "type": "array",
            "minItems": 0,
            "maxItems": 10000,
            "items": {
              "$ref": "#/components/schemas/error_link_description"
            }
          }
        }
      },
      "error_401": {
        "type": "object",
        "title": "Unauthorized Error",
        "description": "Authentication failed due to missing Authorization header, or invalid authentication credentials.",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "AUTHENTICATION_FAILURE"
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "Authentication failed due to missing authorization header, or invalid authentication credentials."
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error_details"
            }
          },
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes."
          },
          "links": {
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).",
            "type": "array",
            "minItems": 0,
            "maxItems": 10000,
            "items": {
              "$ref": "#/components/schemas/error_link_description"
            }
          }
        }
      },
      "error_403": {
        "type": "object",
        "title": "Not Authorized Error",
        "description": "The client is not authorized to access this resource, although it may have valid credentials. ",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "NOT_AUTHORIZED"
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "Authorization failed due to insufficient permissions."
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error_details"
            }
          },
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes."
          },
          "links": {
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).",
            "type": "array",
            "minItems": 0,
            "maxItems": 10000,
            "items": {
              "$ref": "#/components/schemas/error_link_description"
            }
          }
        }
      },
      "error_404": {
        "type": "object",
        "title": "Not found Error",
        "description": "The server has not found anything matching the request URI. This either means that the URI is incorrect or the resource is not available.",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "RESOURCE_NOT_FOUND"
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "The specified resource does not exist."
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error_details"
            }
          },
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes."
          },
          "links": {
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).",
            "type": "array",
            "minItems": 0,
            "maxItems": 10000,
            "items": {
              "$ref": "#/components/schemas/error_link_description"
            }
          }
        }
      },
      "error_409": {
        "type": "object",
        "title": "Resource Conflict Error",
        "description": "The server has detected a conflict while processing this request.",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "RESOURCE_CONFLICT"
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "The server has detected a conflict while processing this request."
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error_details"
            }
          },
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes."
          },
          "links": {
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).",
            "type": "array",
            "minItems": 0,
            "maxItems": 10000,
            "items": {
              "$ref": "#/components/schemas/error_link_description"
            }
          }
        }
      },
      "error_415": {
        "type": "object",
        "title": "Unsupported Media Type Error",
        "description": "The server does not support the request payload's media type.",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "UNSUPPORTED_MEDIA_TYPE"
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "The server does not support the request payload's media type."
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error_details"
            }
          },
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes."
          },
          "links": {
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).",
            "type": "array",
            "minItems": 0,
            "maxItems": 10000,
            "items": {
              "$ref": "#/components/schemas/error_link_description"
            }
          }
        }
      },
      "error_422": {
        "type": "object",
        "title": "Unprocessable Entity Error",
        "description": "The requested action cannot be performed and may require interaction with APIs or processes outside of the current request. This is distinct from a 500 response in that there are no systemic problems limiting the API from performing the request.",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "UNPROCESSABLE_ENTITY"
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "The requested action could not be performed, semantically incorrect, or failed business validation."
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error_details"
            }
          },
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes."
          },
          "links": {
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).",
            "type": "array",
            "minItems": 0,
            "maxItems": 10000,
            "items": {
              "$ref": "#/components/schemas/error_link_description"
            }
          }
        }
      },
      "error_500": {
        "type": "object",
        "title": "Internal Server Error",
        "description": "This is either a system or application error, and generally indicates that although the client appeared to provide a correct request, something unexpected has gone wrong on the server.",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "INTERNAL_SERVER_ERROR"
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "An internal server error occurred."
            ]
          },
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes."
          },
          "links": {
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).",
            "type": "array",
            "minItems": 0,
            "maxItems": 10000,
            "items": {
              "$ref": "#/components/schemas/error_link_description"
            }
          }
        },
        "example": {
          "name": "INTERNAL_SERVER_ERROR",
          "message": "An internal server error occurred.",
          "debug_id": "90957fca61718",
          "links": [
            {
              "href": "https://developer.paypal.com/api/orders/v2/#error-INTERNAL_SERVER_ERROR",
              "rel": "information_link"
            }
          ]
        }
      },
      "error_503": {
        "type": "object",
        "title": "Service Unavailable Error",
        "description": "The server is temporarily unable to handle the request, for example, because of planned maintenance or downtime.",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "SERVICE_UNAVAILABLE"
            ]
          },
          "message": {
            "type": "string",
            "enum": [
              "Service Unavailable."
            ]
          },
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes."
          },
          "links": {
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS).",
            "type": "array",
            "minItems": 0,
            "maxItems": 10000,
            "items": {
              "$ref": "#/components/schemas/error_link_description"
            }
          }
        },
        "example": {
          "name": "SERVICE_UNAVAILABLE",
          "message": "Service Unavailable.",
          "debug_id": "90957fca61718",
          "information_link": "https://developer.paypal.com/docs/api/orders/v2/#error-SERVICE_UNAVAILABLE"
        }
      },
      "link_description": {
        "type": "object",
        "title": "Link Description",
        "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information.",
        "required": [
          "href",
          "rel"
        ],
        "properties": {
          "href": {
            "type": "string",
            "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call."
          },
          "rel": {
            "type": "string",
            "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)."
          },
          "method": {
            "type": "string",
            "description": "The HTTP method required to make the related call.",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "HEAD",
              "CONNECT",
              "OPTIONS",
              "PATCH"
            ]
          }
        }
      },
      "error": {
        "type": "object",
        "title": "Error",
        "description": "The error details.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The human-readable, unique name of the error."
          },
          "message": {
            "type": "string",
            "description": "The message that describes the error."
          },
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes."
          },
          "information_link": {
            "type": "string",
            "description": "The information link, or URI, that shows detailed information about this error for the developer.",
            "readOnly": true
          },
          "details": {
            "type": "array",
            "description": "An array of additional details about the error.",
            "items": {
              "$ref": "#/components/schemas/error_details"
            }
          },
          "links": {
            "type": "array",
            "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links).",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/link_description",
              "readOnly": true
            }
          }
        },
        "required": [
          "name",
          "message",
          "debug_id"
        ]
      },
      "date_time": {
        "type": "string",
        "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>",
        "format": "ppaas_date_time_v3",
        "minLength": 20,
        "maxLength": 64,
        "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$"
      },
      "dispute_reason": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[0-9A-Z_]+$",
        "title": "Dispute Reason",
        "description": "The reason for the item-level dispute. For information about the required information for each dispute reason and associated evidence type, see <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#dispute-reasons\">dispute reasons</a>.",
        "enum": [
          "MERCHANDISE_OR_SERVICE_NOT_RECEIVED",
          "MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED",
          "UNAUTHORISED",
          "CREDIT_NOT_PROCESSED",
          "DUPLICATE_TRANSACTION",
          "INCORRECT_AMOUNT",
          "PAYMENT_BY_OTHER_MEANS",
          "CANCELED_RECURRING_BILLING",
          "PROBLEM_WITH_REMITTANCE",
          "OTHER"
        ]
      },
      "status": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "readOnly": true,
        "pattern": "^[0-9A-Z_]+$",
        "description": "The overall status of the dispute, constant for all the parties involved at anytime during the dispute lifecycle.",
        "enum": [
          "OPEN",
          "WAITING_FOR_BUYER_RESPONSE",
          "WAITING_FOR_SELLER_RESPONSE",
          "UNDER_REVIEW",
          "RESOLVED",
          "OTHER"
        ]
      },
      "dispute_state": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[0-9A-Z_]+$",
        "title": "Dispute State",
        "description": "The user specific state of the dispute, could vary between parties during the dispute lifecycle.",
        "enum": [
          "OPEN_INQUIRIES",
          "REQUIRED_ACTION",
          "REQUIRED_OTHER_PARTY_ACTION",
          "UNDER_PAYPAL_REVIEW",
          "APPEALABLE",
          "RESOLVED"
        ]
      },
      "currency_code": {
        "description": "The [three-character ISO-4217 currency code](/docs/api/reference/currency-codes/) that identifies the currency.",
        "type": "string",
        "format": "ppaas_common_currency_code_v2",
        "minLength": 3,
        "maxLength": 3
      },
      "money": {
        "type": "object",
        "title": "Money",
        "description": "The currency and amount for a financial transaction, such as a balance or payment due.",
        "properties": {
          "currency_code": {
            "$ref": "#/components/schemas/currency_code"
          },
          "value": {
            "type": "string",
            "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/docs/api/reference/currency-codes/).",
            "maxLength": 32,
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$"
          }
        },
        "required": [
          "currency_code",
          "value"
        ]
      },
      "cryptocurrency_symbol": {
        "description": "The Cryptocurrency ticker symbol / code as assigned by liquidity providers (exchanges).",
        "type": "string",
        "minLength": 1,
        "maxLength": 10,
        "pattern": "^[0-9A-Za-z]{1,10}$",
        "enum": [
          "BTC",
          "ETH",
          "BCH",
          "LTC"
        ]
      },
      "cryptocurrency_quantity": {
        "type": "string",
        "minLength": 1,
        "maxLength": 40,
        "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
        "description": "Quantity of a cryptocurrency asset.<br/>This is a decimal number with scale defined for each Cryptocurrency by the founders. For example, <li>Bitcoin(BTC) has 8 as scale,</li><li>Ethereum (ETH) has 18 as scale.</li><br/>PayPal Cryptocurrency platform handles the scale to 8 digits for Bitcoin and its forks or offshoots and Ehereum."
      },
      "cryptocurrency": {
        "type": "object",
        "title": "Cryptocurrency",
        "description": "Representation of a specific amount of Cryptocurrency, denoted by its symbol and quantity.",
        "properties": {
          "asset_symbol": {
            "$ref": "#/components/schemas/cryptocurrency_symbol"
          },
          "quantity": {
            "$ref": "#/components/schemas/cryptocurrency_quantity"
          }
        },
        "required": [
          "asset_symbol",
          "quantity"
        ]
      },
      "dispute_lifecycle_stage": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[0-9A-Z_]+$",
        "readOnly": true,
        "description": "The stage in the dispute lifecycle.",
        "enum": [
          "INQUIRY",
          "CHARGEBACK",
          "PRE_ARBITRATION",
          "ARBITRATION"
        ]
      },
      "dispute_channel": {
        "readOnly": true,
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "description": "The channel where the customer created the dispute.",
        "enum": [
          "INTERNAL",
          "EXTERNAL",
          "ALERT"
        ]
      },
      "dispute_info": {
        "type": "object",
        "title": "Dispute Summary Information",
        "description": "The dispute summary information.",
        "properties": {
          "dispute_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "readOnly": true,
            "description": "The ID of the dispute."
          },
          "create_time": {
            "readOnly": true,
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time when the dispute was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`."
          },
          "update_time": {
            "readOnly": true,
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`."
          },
          "reason": {
            "$ref": "#/components/schemas/dispute_reason"
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/status"
          },
          "dispute_state": {
            "readOnly": true,
            "$ref": "#/components/schemas/dispute_state"
          },
          "dispute_amount": {
            "$ref": "#/components/schemas/money",
            "description": "The amount in the transaction that the customer originally disputed. Because customers can sometimes dispute only part of the payment, the disputed amount might be different from the total gross or net amount of the original transaction."
          },
          "dispute_asset": {
            "description": "The asset in the transaction that the customer disputed.",
            "$ref": "#/components/schemas/cryptocurrency"
          },
          "dispute_life_cycle_stage": {
            "readOnly": true,
            "$ref": "#/components/schemas/dispute_lifecycle_stage"
          },
          "dispute_channel": {
            "readOnly": true,
            "$ref": "#/components/schemas/dispute_channel"
          },
          "buyer_response_due_date": {
            "readOnly": true,
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time by when the customer must respond to the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). If the customer does not respond by this date and time, the dispute is closed in the merchant's favor. For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`."
          },
          "seller_response_due_date": {
            "readOnly": true,
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time by when the merchant must respond to the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). If the merchant does not respond by this date and time, the dispute is closed in the customer's favor. For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`."
          },
          "links": {
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/link_description",
              "readOnly": true
            }
          }
        }
      },
      "dispute_search": {
        "type": "object",
        "title": "Dispute Search Response",
        "description": "An array of disputes. Includes links that enable you to navigate through the response.",
        "properties": {
          "items": {
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "description": "An array of disputes that match the filter criteria. Sorted in latest to earliest creation time order.",
            "items": {
              "$ref": "#/components/schemas/dispute_info"
            }
          },
          "links": {
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/link_description",
              "readOnly": true
            }
          }
        }
      },
      "buyer": {
        "type": "object",
        "title": "Customer",
        "description": "The details for the customer who funds the payment. For example, the customer's first name, last name, and email address.",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "pattern": "^[^~!@#$%^*()_{}:|\\t\\n/]+$",
            "description": "The customer's name."
          }
        }
      },
      "email_address": {
        "type": "string",
        "description": "The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>",
        "format": "ppaas_common_email_address_v2",
        "minLength": 3,
        "maxLength": 254,
        "pattern": "^.+@[^\"\\-].+$"
      },
      "seller": {
        "type": "object",
        "title": "Merchant",
        "description": "The details for the merchant who receives the funds and fulfills the order. For example, merchant ID, and contact email address.",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/email_address",
            "description": "The email address for the merchant's PayPal account."
          },
          "merchant_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The PayPal account ID for the merchant.",
            "pattern": "^[0-9A-Za-z]+$"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "pattern": "^[^~!@#$%^*()_{}:|\\t\\n/]+$",
            "description": "The name of the merchant."
          }
        }
      },
      "item_type": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[0-9A-Z_]+$",
        "title": "Item Type",
        "description": "The type of the item which has the issue.",
        "enum": [
          "PRODUCT",
          "SERVICE",
          "BOOKING",
          "DIGITAL_DOWNLOAD"
        ]
      },
      "item_product_details": {},
      "item_service_details": {},
      "item_booking_details": {},
      "item_digital_download_details": {},
      "item_cancellation_details": {},
      "item_agreed_refund_details": {},
      "item_info": {
        "type": "object",
        "title": "Item Information",
        "description": "The information for a purchased item in a disputed transaction.",
        "properties": {
          "item_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9]+$",
            "description": "The item ID. If the merchant provides multiple pieces of evidence and the transaction has multiple item IDs, the merchant can use this value to associate a piece of evidence with an item ID."
          },
          "item_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "The item name."
          },
          "item_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "The item description."
          },
          "item_quantity": {
            "type": "string",
            "description": "The count of the item in the dispute. Must be a whole number.",
            "minLength": 1,
            "maxLength": 10,
            "pattern": "^[1-9][0-9]{0,9}$"
          },
          "partner_transaction_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9]+$",
            "description": "The ID of the transaction in the partner system. The partner transaction ID is returned at an item level because the partner might show different transactions for different items in the cart."
          },
          "reason": {
            "$ref": "#/components/schemas/dispute_reason"
          },
          "dispute_amount": {
            "$ref": "#/components/schemas/money",
            "description": "The amount of the item in the dispute.",
            "readOnly": true
          },
          "notes": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Any notes provided with the item."
          },
          "item_type": {
            "$ref": "#/components/schemas/item_type"
          },
          "product_details": {
            "$ref": "#/components/schemas/item_product_details"
          },
          "service_details": {
            "$ref": "#/components/schemas/item_service_details"
          },
          "booking_details": {
            "$ref": "#/components/schemas/item_booking_details"
          },
          "digital_download_details": {
            "$ref": "#/components/schemas/item_digital_download_details"
          },
          "cancellation_details": {
            "$ref": "#/components/schemas/item_cancellation_details"
          },
          "agreed_refund_details": {
            "$ref": "#/components/schemas/item_agreed_refund_details"
          }
        }
      },
      "payment_processor": {},
      "transaction_info": {
        "type": "object",
        "title": "Transaction Information",
        "description": "The information about the disputed transaction.",
        "properties": {
          "buyer_transaction_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The ID, as seen by the customer, for this transaction.",
            "pattern": "^[A-Za-z0-9-]+$"
          },
          "seller_transaction_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The ID, as seen by the merchant, for this transaction.",
            "pattern": "^[A-Za-z0-9-]+$"
          },
          "reference_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The ID, as seen by the partner, for this transaction.",
            "pattern": "^[A-Za-z0-9-]+$"
          },
          "create_time": {
            "description": "The date and time when the transaction was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
            "$ref": "#/components/schemas/date_time"
          },
          "transaction_status": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The transaction status.",
            "enum": [
              "COMPLETED",
              "UNCLAIMED",
              "DENIED",
              "FAILED",
              "HELD",
              "PENDING",
              "PARTIALLY_REFUNDED",
              "REFUNDED",
              "REVERSED",
              "CANCELLED"
            ]
          },
          "gross_amount": {
            "description": "The gross amount of the transaction.",
            "$ref": "#/components/schemas/money"
          },
          "gross_asset": {
            "description": "The gross asset of the transaction.",
            "$ref": "#/components/schemas/cryptocurrency"
          },
          "invoice_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 127,
            "description": "The ID of the invoice for the payment.",
            "pattern": "^[A-Za-z0-9:\\-|]+$"
          },
          "custom": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "A free-text field that is entered by the merchant during checkout."
          },
          "buyer": {
            "$ref": "#/components/schemas/buyer"
          },
          "seller": {
            "$ref": "#/components/schemas/seller"
          },
          "items": {
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "readOnly": true,
            "description": "An array of items that were purchased as part of the transaction.",
            "items": {
              "$ref": "#/components/schemas/item_info"
            }
          },
          "payment_processor": {
            "$ref": "#/components/schemas/payment_processor"
          }
        }
      },
      "fee_policy": {
        "type": "object",
        "title": "Fee Policy",
        "description": "Policy that determines whether the fee needs to be charged, retained or returned while moving the money as part of dispute process.",
        "properties": {}
      },
      "dispute_outcome": {
        "type": "object",
        "title": "Dispute Outcome",
        "description": "The outcome of a dispute.",
        "properties": {
          "outcome_code": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The outcome of a resolved dispute.",
            "enum": [
              "RESOLVED_BUYER_FAVOUR",
              "RESOLVED_SELLER_FAVOUR",
              "RESOLVED_WITH_PAYOUT",
              "CANCELED_BY_BUYER",
              "ACCEPTED",
              "DENIED",
              "NONE"
            ]
          },
          "amount_refunded": {
            "$ref": "#/components/schemas/money",
            "description": "The amount that either the merchant or PayPal refunds the customer."
          },
          "asset_refunded": {
            "description": "The asset that either the merchant or PayPal refunds the customer.",
            "$ref": "#/components/schemas/cryptocurrency"
          }
        }
      },
      "adjudication_type": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[0-9A-Z_]+$",
        "description": "The type of adjudication.",
        "enum": [
          "DENY_BUYER",
          "PAYOUT_TO_BUYER",
          "PAYOUT_TO_SELLER",
          "RECOVER_FROM_SELLER"
        ]
      },
      "adjudication_reason": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[0-9A-Z_]+$",
        "description": "The reason for the adjudication type.",
        "enum": [
          "AMOUNT_DIFFERENCE_EXPECTED_DUE_TO_FEES",
          "BILLING_AGREEMENT_CHANGE_DISCLOSED",
          "BILLING_AGREEMENT_CHANGE_NOT_DISCLOSED",
          "BILLING_AGREEMENT_DATE_CHANGE_DISCLOSED",
          "BILLING_AGREEMENT_DATE_CHANGE_NOT_DISCLOSED",
          "BUYER_ATTEMPTED_RETURN",
          "BUYER_BILLED_ONLY_ONCE",
          "BUYER_CANCELLED_CASE",
          "BUYER_CANCELLED_SERVICE",
          "BUYER_FAILED_TO_DESCRIBE_ISSUE",
          "BUYER_HAS_POSSESSION_OF_THE_MERCHANDISE_OR_SERVICE",
          "BUYER_MADE_NO_ATTEMPT_TO_RESOLVE_WITH_SELLER",
          "BUYER_NOT_IN_POSSESSION_OF_ITEM_TO_RETURN",
          "BUYER_PROVIDED_CREDIT_RECEIPT",
          "BUYER_RECEIVED_DUPLICATE_REFUND",
          "CANCELLED_PER_TERMS_OF_BILLING_AGREEMENT",
          "CARD_NOT_STOLEN",
          "CARD_NOT_STOLEN_BEFORE_AUTH",
          "CUSTOMER_RECOGNIZES_TRANSACTION",
          "DECISION_BASED_ON_AVAILABLE_INFORMATION",
          "DELIVERY_AFTER_EXPECTED_DELIVERY_DATE",
          "DELIVERY_DUE_WITHIN_EXPECTED_DELIVERY_DATE",
          "DELIVERY_OR_SERVICE_REFUSED",
          "DOCUMENTATION_MATCHES_AMOUNT_CHARGED",
          "DOCUMENTATION_MATCHES_AMOUNT_IN_PAYPAL_ACCOUNT",
          "DUPLICATE_ADD_FUNDS",
          "EFFORTLESS_SELLER_PROTECTION",
          "IN_PERSON_DELIVERY",
          "INELIGIBLE_BUYER_PROTECTION_POLICY",
          "INELIGIBLE_SELLER_PROTECTION_POLICY",
          "INQUIRY_OFFER_ITEM_REPLACED",
          "INQUIRY_OFFER_PARTIAL_REFUND",
          "INQUIRY_OFFER_REFUND_WITH_ITEM_RETURN",
          "INQUIRY_OFFER_REFUND_WITH_REPLACEMENT",
          "INVALID_APPEAL_REASON",
          "INVALID_CHARGEBACK_SELLER_FAVOUR",
          "INVALID_DELIVERY_PROOF",
          "INVALID_DELIVERY_PROOF_SIGNATURE",
          "INVALID_DOCUMENTATION",
          "INVALID_PROOF_OF_SHIPMENT",
          "INVALID_REFUND_PROOF",
          "INVALID_RETURN_DELIVERY_NO_SIGNATURE_PROOF",
          "INVALID_RETURN_DELIVERY_PROOF",
          "INVALID_TRACKING",
          "ITEM_ALTERED_REPAIRED",
          "ITEM_NOT_AS_ADVERTISED",
          "ITEM_NOT_AS_DESCRIBED",
          "ITEM_NOT_DAMAGED",
          "ITEM_NOT_DELIVERED",
          "ITEM_NOT_RETURNED_TO_SELLER",
          "ITEM_NOT_SHIPPED",
          "ITEM_OF_DIFFERENT_QUALITY_OR_QUANTITY",
          "ITEM_OUT_OF_STOCK_AND_NOT_DELIVERED",
          "ITEM_RETURNED_TO_SELLER",
          "ITEM_SERVICE_MISREPRESENTED",
          "ITEM_SERVICE_NOT_MISREPRESENTED",
          "ITEM_SERVICE_RECEIVED_BY_BUYER",
          "ITEM_SOLD_AS_DESCRIBED",
          "ITEM_VALUE_UNAFFECTED",
          "MULTIPLE_APPEALS_WITH_SAME_REASON",
          "NO_DOCUMENTATION_FROM_BUYER",
          "NO_DOCUMENTATION_SUPPORTING_DUE_OF_CREDIT",
          "NO_PROOF_OF_DELIVERY",
          "NO_PROOF_OF_DELIVERY_INTANGIBLE",
          "NO_PROTECTION_FOR_DIGITAL_GOODS_SERVICE",
          "NO_RESPONSE_FROM_BUYER",
          "NO_RESPONSE_FROM_BUYER_FOR_ADDITIONAL_INFO_REQUEST",
          "NO_SELLER_RESPONSE",
          "NO_SELLER_RESPONSE_FOR_ADDITIONAL_INFO_REQUEST",
          "NO_VALID_SHIPMENT_PROOF",
          "NOT_A_BILLING_ERROR",
          "NOT_AN_UNAUTHORIZED_TRANSACTION",
          "NOT_DUPLICATE_FUNDS_ADDED_ONCE",
          "NOT_DUPLICATE_FUNDS_WITHDRAWN_ONCE",
          "NOT_SHIPPED_TO_CORRECT_ADDRESS",
          "PARTIAL_REFUND_ISSUED_FOR_MISSING_ITEMS",
          "PARTIAL_REFUND_OFFER_ACCEPTED",
          "PAYMENT_REVERSED_ALREADY",
          "POS_SUBMITTED_INSTEAD_OF_POD",
          "PREAUTH_INSTALLMENT_DUE",
          "PROOF_OF_BILLING_AFTER_CANCELLATION_ACCEPTED",
          "PROOF_OF_DUPLICATE_DENIED_OR_INSUFFICIENT",
          "PROOF_OF_INCORRECT_TRANSACTION_AMOUNT_ACCEPTED",
          "PROOF_OF_PAID_BY_OTHER_MEANS_NOT_SUBMITTED",
          "PROOF_OF_TRACKING_NOT_SUBMITTED",
          "PROTECTED_BY_PAYPAL",
          "REPRESENTED_BY_PAYPAL",
          "SELLER_ACCEPTED_MULTIPLE_PAYMENTS",
          "SELLER_AGREED_REFUND_WITHOUT_RETURN",
          "SELLER_AGREED_TO_ISSUE_CREDIT",
          "SELLER_ISSUED_CREDIT_TO_BUYER",
          "SELLER_ISSUED_REFUND",
          "SELLER_NOT_REACHABLE",
          "SELLER_RECEIVED_PAYMENT_TWICE_OR_FOR_REPLACEMENT",
          "SELLER_REFUSED_REFUND",
          "SELLER_REFUSED_RETURN",
          "SELLER_SURCHARGED_BUYER",
          "SERVICE_NOT_COMPLETED_AS_AGREED",
          "SHIPPING_COMPANY_WONT_SHIP",
          "TRACKING_PROOF_NOT_ENOUGH",
          "TRANSACTION_AUTHORIZED_BY_CARDHOLDER",
          "TRANSACTION_CANCELLED_AFTER_AUTHORIZATION_DATE",
          "TRANSACTION_CANCELLED_BEFORE_SHIPMENT_SERVICE_DATE",
          "TRANSACTION_MATCHES_BUYER_SPENDING_PATTERN",
          "TRANSACTION_PROCESSED_CORRECTLY",
          "TRUSTED_BUYER_PAYOUT",
          "UNUSED_SHIPPING_LABEL",
          "VALID_PROOF_OF_DELIVERY",
          "VALID_PROOF_OF_DELIVERY_WITH_SIGNATURE",
          "VALID_PROOF_OF_REFUND",
          "VALID_PROOF_SUPPORTING_CLAIM",
          "VALID_RETURN_DELIVERY_PROOF",
          "VALID_RETURN_DELIVERY_PROOF_WITH_SIGNATURE",
          "VALID_SHIPMENT_PROOF",
          "VALUE_AFFECTED_SIGNIFICANTLY",
          "PROTECTION_POLICY_APPLIES"
        ]
      },
      "adjudication": {
        "type": "object",
        "title": "Adjudication",
        "description": "The Adjudication details for the dispute.",
        "properties": {
          "type": {
            "description": "The type of adjudication.",
            "$ref": "#/components/schemas/adjudication_type"
          },
          "adjudication_time": {
            "description": "The date and time when the adjudication was done, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "$ref": "#/components/schemas/date_time"
          },
          "reason": {
            "description": "The reason for the adjudication type.",
            "$ref": "#/components/schemas/adjudication_reason"
          },
          "dispute_life_cycle_stage": {
            "description": "The dispute life cycle stage during the adjudication.",
            "$ref": "#/components/schemas/dispute_lifecycle_stage"
          }
        },
        "required": [
          "type",
          "adjudication_time"
        ]
      },
      "money_movement_reason": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[0-9A-Z_]+$",
        "description": "The reason for the money movement.",
        "enum": [
          "DISPUTE_SETTLEMENT_FEE",
          "DISPUTE_SETTLEMENT",
          "DISPUTE_FEE",
          "CHARGEBACK_FEE"
        ]
      },
      "money_movement": {
        "type": "object",
        "title": "Money movement",
        "description": "The Money movement details with party.",
        "properties": {
          "affected_party": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The affected party in the money movement.",
            "enum": [
              "SELLER",
              "BUYER",
              "PAYMENT_PROCESSOR"
            ]
          },
          "amount": {
            "description": "The amount transferred as part of the money movement.",
            "$ref": "#/components/schemas/money"
          },
          "asset": {
            "description": "The asset transferred as part of the money movement.",
            "$ref": "#/components/schemas/cryptocurrency"
          },
          "initiated_time": {
            "description": "The date and time when the money movement was initiated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "$ref": "#/components/schemas/date_time"
          },
          "type": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The type of the money movement.",
            "enum": [
              "DEBIT",
              "CREDIT"
            ]
          },
          "reason": {
            "description": "The reason for the money movement.",
            "$ref": "#/components/schemas/money_movement_reason"
          }
        }
      },
      "document": {
        "type": "object",
        "title": "Document",
        "description": "An uploaded document as a binary object that supports a dispute.",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "pattern": "^[A-Za-z0-9-_,\\s]+[.]{1}[A-Za-z]+$",
            "description": "The document name."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "readOnly": true,
            "description": "The downloadable URL for the document for which the client has access.<br/><br/><blockquote><strong>Note:</strong> Document download may require some configuration setup and available as a limited release at this time. For more information, reach out to your PayPal account manager.</blockquote>."
          }
        }
      },
      "message": {
        "type": "object",
        "title": "Message",
        "description": "A customer- or merchant-posted message for the dispute.",
        "properties": {
          "posted_by": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "Indicates whether the customer, merchant, or dispute arbiter posted the message.",
            "readOnly": true,
            "enum": [
              "BUYER",
              "SELLER",
              "ARBITER"
            ]
          },
          "time_posted": {
            "readOnly": true,
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time when the message was posted, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6)."
          },
          "content": {
            "type": "string",
            "description": "The message text.",
            "maxLength": 2000,
            "minLength": 0
          },
          "documents": {
            "type": "array",
            "readOnly": true,
            "description": "An array of metadata for the documents which contains any additional info about the message posted.",
            "items": {
              "$ref": "#/components/schemas/document"
            },
            "minItems": 1,
            "maxItems": 10
          }
        }
      },
      "merchant_contacted_outcome": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[0-9A-Z_]+$",
        "title": "Merchant Contacted Outcome",
        "description": "The outcome when the customer has contacted the merchant.",
        "enum": [
          "NO_RESPONSE",
          "FIXED",
          "NOT_FIXED"
        ]
      },
      "merchant_contacted_mode": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[0-9A-Z_]+$",
        "title": "Merchant Contacted Method",
        "description": "The method used to contact the merchant.",
        "enum": [
          "WEBSITE",
          "PHONE",
          "EMAIL",
          "WRITTEN",
          "IN_PERSON"
        ]
      },
      "duplicate_transaction": {
        "type": "object",
        "title": "Duplicate Transaction",
        "description": "The duplicate transaction details.",
        "properties": {
          "received_duplicate": {
            "type": "boolean",
            "description": "If `true`, indicates that a duplicate transaction was received."
          },
          "original_transaction": {
            "$ref": "#/components/schemas/transaction_info",
            "description": "The transaction details for the original transaction, when the dispute reason is `DUPLICATE_TRANSACTION`. Currently, contains only the date and amount."
          }
        }
      },
      "incorrect_transaction_amount": {
        "type": "object",
        "title": "Incorrect Transaction Amount",
        "description": "The incorrect transaction amount details.",
        "properties": {
          "correct_transaction_amount": {
            "$ref": "#/components/schemas/money"
          },
          "correct_transaction_asset": {
            "description": "The correct asset quantity of the transaction.",
            "$ref": "#/components/schemas/cryptocurrency"
          },
          "correct_transaction_time": {
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time when the customer created the transaction, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6)."
          }
        }
      },
      "payment_by_other_means": {
        "type": "object",
        "title": "Payment by Other Means",
        "description": "The payment by other means details.",
        "properties": {
          "charge_different_from_original": {
            "type": "boolean",
            "description": "If `true`, indicates that a charge was made that is different from the original charge."
          },
          "received_duplicate": {
            "type": "boolean",
            "description": "If `true`, indicates that a duplicate transaction was received."
          },
          "payment_method": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The payment method.",
            "enum": [
              "CASH",
              "CREDIT_CARD",
              "CHECK",
              "PAYPAL",
              "DEBIT_CARD",
              "GIFT_CARD",
              "BANK_TRANSFER"
            ]
          },
          "payment_instrument_suffix": {
            "type": "string",
            "minLength": 2,
            "maxLength": 4,
            "description": "Last 2-4 characters of the payment instrument. For payment_method CHECK, payment_instrument_suffix entered must be of minimum length 2-4 characters. For payment_method CREDIT_CARD, DEBIT_CARD, GIFT_CARD, BANK_TRANSFER, payment_instrument_suffix entered must be of length 4."
          }
        }
      },
      "cancellation_details": {
        "type": "object",
        "title": "Cancellation Details",
        "description": "The cancellation details.",
        "properties": {
          "cancellation_date": {
            "description": "The date and time of the cancellation, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6).",
            "$ref": "#/components/schemas/date_time"
          },
          "cancellation_number": {
            "description": "The cancellation number.",
            "type": "string",
            "minLength": 1,
            "maxLength": 127,
            "pattern": "^[A-Za-z0-9]+$"
          },
          "cancelled": {
            "type": "boolean",
            "description": "Indicates whether the dispute was canceled."
          },
          "cancellation_mode": {
            "description": "Indicates the mode used for order cancellation.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "enum": [
              "CANCELLED_PAYPAL_BILLING_AGREEMENT",
              "WEBSITE",
              "PHONE",
              "EMAIL",
              "WRITTEN",
              "IN_PERSON"
            ]
          }
        }
      },
      "return_details": {
        "type": "object",
        "title": "Return Details",
        "description": "The return details for the product.",
        "properties": {
          "return_time": {
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time when the product was returned, [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6)."
          },
          "mode": {
            "description": "The method that the customer used to return the product.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Z_]+$",
            "enum": [
              "SHIPPED",
              "IN_PERSON"
            ]
          },
          "receipt": {
            "type": "boolean",
            "description": "Indicates whether customer has the return receipt."
          },
          "return_confirmation_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9:\\-]+$",
            "description": "The confirmation number for the item return."
          },
          "returned": {
            "description": "If `true`, indicates that the item was returned but the seller refused to accept the return and if `false`, indicates the item was not attempted to return.",
            "type": "boolean"
          }
        }
      },
      "product_details": {
        "type": "object",
        "title": "Product Details",
        "description": "The product information.",
        "properties": {
          "description": {
            "description": "The product description.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          "product_received": {
            "description": "Indicates whether the product was, or was not, received or returned.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "enum": [
              "YES",
              "NO",
              "RETURNED"
            ]
          },
          "product_received_time": {
            "description": "The date and time when product was delivered.",
            "$ref": "#/components/schemas/date_time"
          },
          "expected_delivery_date": {
            "description": "The expected delivery date and time of the product.",
            "$ref": "#/components/schemas/date_time"
          },
          "sub_reasons": {
            "description": "An array of sub-reasons for the product issue.",
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[0-9A-Z_]+$",
              "description": "The sub-reason for the product issue.",
              "enum": [
                "DAMAGED",
                "DIFFERENT",
                "MISSING_PARTS",
                "OTHER"
              ]
            }
          },
          "purchase_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL where the customer purchased the product."
          },
          "return_details": {
            "$ref": "#/components/schemas/return_details"
          }
        }
      },
      "service_details": {
        "type": "object",
        "title": "Service Details",
        "description": "The service details.",
        "properties": {
          "description": {
            "description": "The service description.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          "service_started": {
            "description": "Indicates whether the service was started or cancelled.",
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "enum": [
              "YES",
              "NO",
              "CANCELLED"
            ]
          },
          "note": {
            "description": "The customer specified note about the service usage.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          "sub_reasons": {
            "description": "An array of sub-reasons for the service issue.",
            "type": "array",
            "items": {
              "description": "The sub-reason for the service issue.",
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[0-9A-Z_]+$",
              "enum": [
                "DAMAGED",
                "DIFFERENT",
                "INCOMPLETE",
                "OTHER"
              ]
            }
          },
          "purchase_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the merchant or marketplace site where the customer purchased the service."
          }
        }
      },
      "agreed_refund_details": {
        "type": "object",
        "title": "Agreed Refund Details",
        "description": "Details of Agreed Refund between customer and merchant.",
        "properties": {
          "merchant_agreed_refund": {
            "type": "boolean",
            "description": "Indicates whether merchant has agreed to refund the buyer or not."
          },
          "merchant_agreed_refund_time": {
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time proposed by merchant to provide the refund, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6)."
          }
        }
      },
      "credit_not_processed": {
        "type": "object",
        "title": "Credit Not Processed",
        "description": "The credit not processed details.",
        "properties": {
          "issue_type": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The issue type.",
            "enum": [
              "PRODUCT",
              "SERVICE"
            ]
          },
          "expected_refund": {
            "$ref": "#/components/schemas/money"
          },
          "cancellation_details": {
            "$ref": "#/components/schemas/cancellation_details"
          },
          "product_details": {
            "$ref": "#/components/schemas/product_details"
          },
          "service_details": {
            "$ref": "#/components/schemas/service_details"
          },
          "agreed_refund_details": {
            "$ref": "#/components/schemas/agreed_refund_details"
          }
        }
      },
      "canceled_recurring_billing": {
        "type": "object",
        "title": "Canceled Recurring Billing",
        "description": "The recurring billing canceled details.",
        "properties": {
          "expected_refund": {
            "$ref": "#/components/schemas/money"
          },
          "cancellation_details": {
            "$ref": "#/components/schemas/cancellation_details"
          }
        }
      },
      "billing_disputes_properties": {
        "type": "object",
        "title": "Billing Disputes Properties",
        "description": "The billing issue details.",
        "properties": {
          "duplicate_transaction": {
            "$ref": "#/components/schemas/duplicate_transaction"
          },
          "incorrect_transaction_amount": {
            "$ref": "#/components/schemas/incorrect_transaction_amount"
          },
          "payment_by_other_means": {
            "$ref": "#/components/schemas/payment_by_other_means"
          },
          "credit_not_processed": {
            "$ref": "#/components/schemas/credit_not_processed"
          },
          "canceled_recurring_billing": {
            "$ref": "#/components/schemas/canceled_recurring_billing"
          }
        }
      },
      "country_code": {
        "type": "string",
        "description": "The [two-character ISO 3166-1 code](/docs/api/reference/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>",
        "format": "ppaas_common_country_code_v2",
        "maxLength": 2,
        "minLength": 2,
        "pattern": "^([A-Z]{2}|C2)$"
      },
      "address_portable": {
        "type": "object",
        "title": "Portable Postal Address (Medium-Grained)",
        "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute).",
        "properties": {
          "address_line_1": {
            "type": "string",
            "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address.",
            "maxLength": 300
          },
          "address_line_2": {
            "type": "string",
            "description": "The second line of the address. For example, suite or apartment number.",
            "maxLength": 300
          },
          "address_line_3": {
            "type": "string",
            "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address.",
            "maxLength": 100
          },
          "admin_area_4": {
            "type": "string",
            "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:<ul><li>The postal sorting code for Guernsey and many French territories, such as French Guiana.</li><li>The fine-grained administrative levels in China.</li></ul>",
            "maxLength": 100
          },
          "admin_area_3": {
            "type": "string",
            "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:<ul><li>Brazil. Suburb, bairro, or neighborhood.</li><li>India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</li></ul>",
            "maxLength": 100
          },
          "admin_area_2": {
            "type": "string",
            "description": "A city, town, or village. Smaller than `admin_area_level_1`.",
            "maxLength": 120
          },
          "admin_area_1": {
            "type": "string",
            "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
            "maxLength": 300
          },
          "postal_code": {
            "type": "string",
            "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code).",
            "maxLength": 60
          },
          "country_code": {
            "$ref": "#/components/schemas/country_code"
          },
          "address_details": {
            "type": "object",
            "title": "Address Details",
            "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.<br/>For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.",
            "properties": {
              "street_number": {
                "type": "string",
                "description": "The street number.",
                "maxLength": 100
              },
              "street_name": {
                "type": "string",
                "description": "The street name. Just `Drury` in `Drury Lane`.",
                "maxLength": 100
              },
              "street_type": {
                "type": "string",
                "description": "The street type. For example, avenue, boulevard, road, or expressway.",
                "maxLength": 100
              },
              "delivery_service": {
                "type": "string",
                "description": "The delivery service. Post office box, bag number, or post office name.",
                "maxLength": 100
              },
              "building_name": {
                "type": "string",
                "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, <code>Craven House</code>.",
                "maxLength": 100
              },
              "sub_building": {
                "type": "string",
                "description": "The first-order entity below a named building or location that represents the sub-premises. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.",
                "maxLength": 100
              }
            }
          }
        },
        "required": [
          "country_code"
        ]
      },
      "merchandize_dispute_properties": {
        "type": "object",
        "title": "Merchandise Dispute Properties",
        "description": "The customer-provided merchandise issue details for the dispute.",
        "properties": {
          "issue_type": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The issue type.",
            "enum": [
              "PRODUCT",
              "SERVICE"
            ]
          },
          "product_details": {
            "$ref": "#/components/schemas/product_details"
          },
          "service_details": {
            "$ref": "#/components/schemas/service_details"
          },
          "cancellation_details": {
            "$ref": "#/components/schemas/cancellation_details"
          },
          "return_shipping_address": {
            "description": "The return address for the item. Required when the customer must return an item to the merchant for the <a href=\"/docs/integration/direct/customer-disputes/integration-guide/#merchandise_or_service_not_as_described\"><code>MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED</code></a> dispute reason.",
            "$ref": "#/components/schemas/address_portable"
          }
        }
      },
      "extensions": {
        "type": "object",
        "title": "Extensions",
        "description": "The extended properties for the dispute. Includes additional information for a dispute category, such as billing disputes, the original transaction ID, and the correct amount.",
        "properties": {
          "merchant_contacted": {
            "type": "boolean",
            "description": "Indicates that the merchant was contacted."
          },
          "merchant_contacted_outcome": {
            "$ref": "#/components/schemas/merchant_contacted_outcome"
          },
          "merchant_contacted_time": {
            "description": "The date and time when merchant was contacted.",
            "$ref": "#/components/schemas/date_time"
          },
          "merchant_contacted_mode": {
            "description": "The method used to contact the merchant.",
            "$ref": "#/components/schemas/merchant_contacted_mode"
          },
          "buyer_contacted_time": {
            "description": "The date and time when the buyer contacted the partner to file a dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`.",
            "$ref": "#/components/schemas/date_time"
          },
          "buyer_contacted_channel": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The channel through which the buyer contacted the partner to file a dispute. Partners that allow buyers to create dispute from multiple channels can use this field to help identify which channel was used for each individual dispute."
          },
          "billing_dispute_properties": {
            "$ref": "#/components/schemas/billing_disputes_properties"
          },
          "merchandize_dispute_properties": {
            "$ref": "#/components/schemas/merchandize_dispute_properties"
          }
        }
      },
      "tracking_info": {
        "type": "object",
        "title": "Tracking Information",
        "description": "The tracking information.",
        "properties": {
          "carrier_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The name of the shipment carrier for the transaction for this dispute.",
            "enum": [
              "UPS",
              "USPS",
              "FEDEX",
              "AIRBORNE_EXPRESS",
              "DHL",
              "AIRSURE",
              "ROYAL_MAIL",
              "PARCELFORCE",
              "SWIFTAIR",
              "OTHER",
              "UK_PARCELFORCE",
              "UK_ROYALMAIL_SPECIAL",
              "UK_ROYALMAIL_RECORDED",
              "UK_ROYALMAIL_INT_SIGNED",
              "UK_ROYALMAIL_AIRSURE",
              "UK_UPS",
              "UK_FEDEX",
              "UK_AIRBORNE_EXPRESS",
              "UK_DHL",
              "UK_OTHER",
              "UK_CANNOT_PROV_TRACK",
              "UK_CANNOT_PROVIDE_TRACKING",
              "CA_CANADA_POST",
              "CA_PUROLATOR",
              "CA_CANPAR",
              "CA_LOOMIS",
              "CA_TNT",
              "TNT",
              "CA_OTHER",
              "CA_CANNOT_PROV_TRACK",
              "DE_DP_DHL_WITHIN_EUROPE",
              "DE_DP_DHL_T_AND_T_EXPRESS",
              "DE_DHL_DP_INTL_SHIPMENTS",
              "CA_CANNOT_PROVIDE_TRACKING",
              "DE_GLS",
              " DE_DPD_DELISTACK",
              "DE_HERMES",
              "DE_UPS",
              "DE_FEDEX",
              "DE_TNT",
              "DE_OTHER",
              "FR_CHRONOPOST",
              "FR_COLIPOSTE",
              "FR_DHL",
              "FR_UPS",
              "FR_FEDEX",
              "FR_TNT",
              "FR_GLS",
              "FR_OTHER",
              "IT_POSTE_ITALIA",
              "IT_DHL",
              "IT_UPS",
              "IT_FEDEX",
              "IT_TNT",
              "IT_GLS",
              "IT_OTHER",
              "AU_AUSTRALIA_POST_EP_PLAT",
              "AU_AUSTRALIA_POST_EPARCEL",
              "AU_AUSTRALIA_POST_EMS",
              "AU_DHL",
              "AU_STAR_TRACK_EXPRESS",
              "AU_UPS",
              "AU_FEDEX",
              "AU_TNT",
              "AU_TOLL_IPEC",
              "AU_OTHER",
              "FR_SUIVI",
              "IT_EBOOST_SDA",
              "ES_CORREOS_DE_ESPANA",
              "ES_DHL",
              "ES_UPS",
              "ES_FEDEX",
              "ES_TNT",
              "ES_OTHER",
              "AT_AUSTRIAN_POST_EMS",
              "AT_AUSTRIAN_POST_PPRIME",
              "BE_CHRONOPOST",
              "BE_TAXIPOST",
              "CH_SWISS_POST_EXPRES",
              "CH_SWISS_POST_PRIORITY",
              "CN_CHINA_POST",
              "HK_HONGKONG_POST",
              "IE_AN_POST_SDS_EMS",
              "IE_AN_POST_SDS_PRIORITY",
              "IE_AN_POST_REGISTERED",
              "IE_AN_POST_SWIFTPOST",
              "IN_INDIAPOST",
              "JP_JAPANPOST",
              "KR_KOREA_POST",
              "NL_TPG",
              "SG_SINGPOST",
              "TW_CHUNGHWA_POST",
              "CN_CHINA_POST_EMS",
              "CN_FEDEX",
              "CN_TNT",
              "CN_UPS",
              "CN_OTHER",
              "NL_TNT",
              "NL_DHL",
              "NL_UPS",
              "NL_FEDEX",
              "NL_KIALA",
              "BE_KIALA",
              "PL_POCZTA_POLSKA",
              "PL_POCZTEX",
              "PL_GLS",
              "PL_MASTERLINK",
              "PL_TNT",
              "PL_DHL",
              "PL_UPS",
              "PL_FEDEX",
              "JP_SAGAWA_KYUU_BIN",
              "JP_NITTSU_PELICAN_BIN",
              "JP_KURO_NEKO_YAMATO_UNYUU",
              "JP_TNT",
              "JP_DHL",
              "JP_UPS",
              "JP_FEDEX",
              "NL_PICKUP",
              "NL_INTANGIBLE",
              "NL_ABC_MAIL",
              "HK_FOUR_PX_EXPRESS",
              "HK_FLYT_EXPRESS",
              "US_ASCENDIA",
              "US_ENSENDA",
              "US_GLOBEGISTICS",
              "US_ONTRAC",
              "RRDONNELLEY",
              "ASENDIA_UK",
              "UK_COLLECTPLUS",
              "UK_DPD",
              "UK_HERMESWORLD",
              "UK_INTERLINK_EXPRESS",
              "UK_TNT",
              "UK_UK_MAIL",
              "UK_YODEL",
              "BUYLOGIC",
              "CN_EMS",
              "CHINA_POST",
              "CNEXPS",
              "CPACKET",
              "CUCKOOEXPRESS",
              "CN_EC",
              "CN_EMPS",
              "DE_ASENDIA",
              "UK_DELTEC",
              "DE_DEUTSCHE",
              "DE_DPD",
              "RABEN_GROUP",
              "GLOBAL_TNT",
              "ADSONE",
              "AU_AU_POST",
              "BONDSCOURIERS",
              "COURIERS_PLEASE",
              "DTDC_AU",
              "AU_FASTWAY",
              "HUNTER_EXPRESS",
              "SENDLE",
              "AUS_TOLL",
              "TOLL",
              "UBI_LOGISTICS",
              "OMNIPARCEL",
              "QUANTIUM",
              "CN_SF_EXPRESS",
              "SEKOLOGISTICS",
              "HK_TAQBIN",
              "GB_APC",
              "CA_CANPAR_COURIER",
              "GLOBAL_ESTES",
              "CA_GREYHOUND",
              "PUROLATOR",
              "US_RL",
              "IT_BRT",
              "DMM_NETWORK",
              "IT_FERCAM",
              "HERMES_IT",
              "IT_POSTE_ITALIANE",
              "IT_SDA",
              "IT_SGT",
              "GLOBAL_SKYNET",
              "FR_BERT",
              "FR_COLIS",
              "FR_GEODIS",
              "FR_LAPOSTE",
              "FR_TELIWAY",
              "DPD_POLAND",
              "INPOST_PACZKOMATY",
              "POL_POCZTA",
              "POL_SIODEMKA",
              "ESP_CORREOS",
              "ES_CORREOS",
              "ESP_NACEX",
              "ESP_ASM",
              "ESP_REDUR",
              "CBL_LOGISTICA",
              "EKART",
              "IND_DELHIVERY",
              "IND_BLUEDART",
              "IND_DTDC",
              "IND_PROFESSIONAL_COURIERS",
              "IND_REDEXPRESS",
              "IND_XPRESSBEES",
              "IND_DOTZOT",
              "THA_KERRY",
              "SENDIT",
              "ACOMMERCE",
              "NINJAVAN_THAI",
              "NIM_EXPRESS",
              "THA_THAILAND_POST",
              "THA_DYNAMIC_LOGISTICS",
              "ALPHAFAST",
              "FASTRAK_TH",
              "EPARCEL_KR",
              "CJ_KOREA_THAI",
              "RINCOS",
              "KOR_KOREA_POST",
              "KOR_CJ",
              "KOR_ECARGO",
              "SREKOREA",
              "ROCKETPARCEL",
              "BG_BULGARIAN_POST",
              "JPN_JAPAN_POST",
              "JPN_YAMATO",
              "JPN_SAGAWA",
              "TUR_PTT",
              "AUT_AUSTRIAN_POST",
              "AU_AUSTRIAN_POST",
              "RUSSIAN_POST",
              "BEL_DHL",
              "FR_MONDIAL",
              "EU_BPOST",
              "LANDMARK_GLOBAL",
              "IDN_POS",
              "IDN_POS_INT",
              "IDN_JNE",
              "IDN_PANDU",
              "RPX",
              "IDN_TIKI",
              "IDN_LION_PARCEL",
              "NINJAVAN_ID",
              "IDN_WAHANA",
              "IDN_FIRST_LOGISTICS",
              "UK_AN_POST",
              "DPD",
              "UK_FASTWAY",
              "UK_NIGHTLINE",
              "WISELOADS",
              "GR_ELTA",
              "GRC_ACS",
              "GR_GENIKI",
              "NINJAVAN_PHILIPPINES",
              "PHL_XEND_EXPRESS",
              "PHL_LBC",
              "PHL_JAMEXPRESS",
              "PHL_AIRSPEED",
              "PHL_RAF",
              "DIRECTLOG",
              "BRA_CORREIOS",
              "NLD_DHL",
              "NLD_POSTNL",
              "NLD_GLS",
              "NLD_TRANSMISSION",
              "CORREOS_DE_MEXICO",
              "MEX_ESTAFETA",
              "MEX_SENDA",
              "MEX_REDPACK",
              "MEX_AEROFLASH",
              "NATIONWIDE_MY",
              "MYS_MYS_POST",
              "MYS_TAQBIN",
              "MYS_SKYNET",
              "MYS_CITYLINK",
              "MYS_AIRPAK",
              "NINJAVAN_MY",
              "KANGAROO_MY",
              "VNM_VIETNAM_POST",
              "VNPOST_EMS",
              "PRT_INT_SEUR",
              "PRT_CTT",
              "PRT_CHRONOPOST",
              "PRT_SEUR",
              "ADICIONAL",
              "LTU_LIETUVOS",
              "DPEX",
              "LWE_HK",
              "SG_SG_POST",
              "SG_TAQBIN",
              "SG_NINJAVAN",
              "SG_ZALORA",
              "JET_SHIP",
              "SG_PARCELPOST",
              "CHE_SWISS_POST",
              "ASENDIA_HK",
              "HUN_MAGYAR",
              "POSTNORD_LOGISTICS",
              "SWE_DIRECTLINK",
              "SWE_POSTNORD",
              "SWE_DB",
              "CZE_CESKA",
              "NZ_NZ_POST",
              "NZ_COURIER_POST",
              "FASTWAY_NZ",
              "TW_TAIWAN_POST",
              "SPREADEL",
              "ARE_EMIRATES_POST",
              "AXL",
              "CYP_CYPRUS_POST",
              "HRV_HRVATSKA",
              "NOR_POSTEN",
              "RAM",
              "THECOURIERGUY",
              "ZA_FASTWAY",
              "DPE_EXPRESS",
              "POSTI",
              "MATKAHUOLTO",
              "GLOBAL_DHL",
              "ARG_CORREO",
              "ARG_OCA",
              "POST_SERBIA",
              "BH_POSTA",
              "CORREOS_CHILE",
              "APR_72",
              "CORREOS_DE_COSTA_RICA",
              "POSTUR_IS",
              "SPEEDEXCOURIER",
              "ROU_POSTA",
              "UKR_NOVA",
              "UKR_POSHTA",
              "NGA_NIPOST",
              "NG_COURIERPLUS",
              "ESHOPWORLD",
              "WEBINTERPRET",
              "HERMES",
              "ABC_MAIL",
              "ARAMEX",
              "YANWEN",
              "INTERNATIONAL_BRIDGE",
              "SFC_LOGISTICS",
              "BQC_EXPRESS",
              "ONE_WORLD",
              "IT_REGISTER_MAIL",
              "WINIT",
              "CONTINENTAL",
              "EFS",
              "PANTOS",
              "RELAIS_COLIS",
              "US_DHL_EXPRESS",
              "US_DHL_PARCEL",
              "US_DHL_ECOMMERCE",
              "US_DHL_GLOBALFORWARDING",
              "UK_DHL_EXPRESS",
              "UK_DHL_PARCEL",
              "UK_DHL_GLOBALFORWARDING",
              "CN_DHL_EXPRESS",
              "CN_DHL_ECOMMERCE",
              "CN_DHL_GLOBALFORWARDING",
              "DE_DHL_EXPRESS",
              "DE_DHL_PARCEL",
              "DE_DHL_PACKET",
              "DE_DHL_ECOMMERCE",
              "DE_DHL_GLOBALFORWARDING",
              "DE_DHL_DEUTSCHEPOST",
              "AU_DHL_EXPRESS",
              "AU_DHL_ECOMMERCE",
              "AU_DHL_GLOBALFORWARDING",
              "HK_DHL_EXPRESS",
              "HK_DHL_ECOMMERCE",
              "HK_DHL_GLOBALFORWARDING",
              "CA_DHL_EXPRESS",
              "CA_DHL_ECOMMERCE",
              "CA_DHL_GLOBALFORWARDING",
              "IT_DHL_EXPRESS",
              "IT_DHL_ECOMMERCE",
              "IT_DHL_GLOBALFORWARDING",
              "FR_DHL_EXPRESS",
              "FR_DHL_PARCEL",
              "FR_DHL_GLOBALFORWARDING",
              "PL_DHL_EXPRESS",
              "PL_DHL_PARCEL",
              "PL_DHL_GLOBALFORWARDING",
              "ABC_PACKAGE",
              "AN_POST",
              "APC_OVERNIGHT",
              "ASM_ES",
              "AUPOST_CN",
              "ACOMMMERCE",
              "ADICIONAL_PT",
              "AIR_21",
              "AIRBORNE_EXPRESS_UK",
              "AIRPAK_MY",
              "AIRSPEED",
              "ASENDIA_DE",
              "ASENDIA_US",
              "AUSTRALIA_POST",
              "TOLL_AU",
              "AUSTRIAN_POST_EXPRESS",
              "AUSTRIAN_POST",
              "B_TWO_C_EUROPE",
              "BERT",
              "BPOST",
              "BRT_IT",
              "BLUEDART",
              "BONDS_COURIERS",
              "BPOST_INT",
              "BULGARIAN_POST",
              "CJ_LOGISTICS",
              "CJ_INT_MY",
              "CJ_MY",
              "CJ_TH",
              "CANADA_POST",
              "CANPAR",
              "CESKA_CZ",
              "CHRONOPOST_FR",
              "CHRONOPOST_PT",
              "CHUNGHWA_POST",
              "CITYLINK_MY",
              "COLIPOSTE",
              "COLIS",
              "COLLECTPLUS",
              "CORREOS_AG",
              "CORREOS_BR",
              "CORREOS_CL",
              "CORREOS_CR",
              "CORREOS_MX",
              "CORREOS_ES",
              "CORREOS_EXPRESS",
              "COURIERPLUS",
              "COURIER_POST",
              "CYPRUS_POST_CYP",
              "DBSCHENKER_SE",
              "DHL_ES",
              "DHL_ACTIVE_TRACING",
              "DHL_AU",
              "DHL_BENELUX",
              "DHL_DEUTSCHE_POST",
              "DHL_FR",
              "DHL_GLOBAL_ECOMMERCE",
              "DHL_HK",
              "DHL_IT",
              "DHL_JP",
              "DHL_NL",
              "DHL_PACKET",
              "DHL_PARCEL_NL",
              "DHL_PARCEL_ES",
              "DHL_PL",
              "DHL_SG",
              "DHL_UK",
              "DHL_GLOBAL_MAIL_ASIA",
              "DHL_GLOBAL_MAIL",
              "DHL_AT",
              "DPD_DELISTRACK",
              "DPD_FR",
              "DPD_DE",
              "DPD_HK",
              "DPD_IR",
              "DPD_LOCAL_REF",
              "DPD_LOCAL",
              "DPD_PL",
              "DPD_RO",
              "DPD_RU",
              "DPD_UK",
              "DTDC_EXPRESS",
              "DTDC_IN",
              "DAWN_WING",
              "DELHIVERY_IN",
              "DELTEC_DE",
              "DELTEC_UK",
              "DEUTSCHE_DE",
              "DIRECTLINK_SE",
              "DIRECTLOG_BR",
              "DOTZOT",
              "EC_CN",
              "ELTA_GR",
              "EMPS_CN",
              "EMS_CN",
              "ECARGO",
              "EMIRATES_POST",
              "ENSENDA",
              "ESTAFETA",
              "ESTES",
              "FERCAM_IT",
              "FLYT_EXPRESS",
              "FASTRACK",
              "FASTWAY_US",
              "FASTWAY_ZA",
              "FASTWAY_UK",
              "FASTWAY_AU",
              "FIRST_LOGISITCS",
              "FOUR_PX_EXPRESS",
              "GEODIS",
              "GLS_CZ",
              "GLS_FR",
              "GLS_DE",
              "GLS_IT",
              "GLS_NL",
              "GLS_ES",
              "GLS",
              "ACS_GR",
              "GENIKI_GR",
              "GLOBEGISTICS",
              "GREYHOUND",
              "HERMES_DE",
              "HERMESWORLD_UK",
              "HK_POST",
              "HRVATSKA_HR",
              "HUAHAN_EXPRESS",
              "IMX",
              "ITIS",
              "INDIA_POST",
              "INTERLINK",
              "INT_SEUR",
              "INT_SUER",
              "ISRAEL_POST",
              "JNE_IDN",
              "JAMEXPRESS_PH",
              "JAPAN_POST",
              "JP_POST",
              "JETSHIP_MY",
              "JETSHIP_SG",
              "KERRY_EXPRESS_VN",
              "KERRY_EXPRESS_HK",
              "KERRY_EXPRESS_TH",
              "KIALA",
              "KOREA_POST",
              "CJ_KR",
              "LAPOSTE",
              "LBC_PH",
              "LIETUVOS_LT",
              "LION_PARCEL",
              "LOGISTICSWORLDWIDE_HK",
              "LOGISTICSWORLDWIDE_KR",
              "LOGISTICSWORLDWIDE_MY",
              "LOOMIS",
              "MONDIAL",
              "MAGYAR_HU",
              "MALAYSIA_POST",
              "MASTERLINK",
              "AEROFLASH",
              "REDPACK",
              "SENDA_MX",
              "MONDIAL_BE",
              "MYHERMES",
              "NACEX_ES",
              "NATIONWIDE",
              "NZ_POST",
              "NIPOST_NG",
              "NIGHTLINE_UK",
              "NINJAVAN_PH",
              "NINJAVAN_SG",
              "NOVA_POSHTA_INT",
              "NOVA_POSHTA",
              "OCA_AR",
              "ONTRAC",
              "PTT_POST",
              "PANDU",
              "PARCELPOST_SG",
              "POCZTA_POLSKA",
              "POCZTEX",
              "CTT_PT",
              "SEUR_PT",
              "POS_ID",
              "POS_INT",
              "POSTNL_INT_3_S",
              "POSTNL",
              "POSTNL_INT",
              "POSTNORD_LOGISTICS_DK",
              "POSTNORD_LOGISTICS_SE",
              "POSTNORD_LOGISTICS_GLOBAL",
              "POSTA_RO",
              "POSTE_ITALIANE",
              "POSTEN_NORGE",
              "PROFESSIONAL_COURIERS",
              "RAF_PH",
              "RL_US",
              "RPD_2_MAN",
              "RPX_ID",
              "REDEXPRESS",
              "REDUR_ES",
              "REGISTER_MAIL_IT",
              "RELAIS_COLIS_FR",
              "ROCKET_PARCEL",
              "SDA_IT",
              "SF_EXPRESS",
              "SFC_EXPRESS",
              "SGT_IT",
              "SRE_KOREA",
              "SAGAWA",
              "SAGAWA_JP",
              "POST_SERBIA_CS",
              "SINGPOST",
              "SIODEMKA",
              "SKYNET_WORLDWIDE",
              "SKYNET_MY",
              "SKYNET_UAE",
              "SKYNET_UK",
              "SEUR_ES",
              "STARTRACK_EXPRESS",
              "STARTRACK",
              "SWISS_POST",
              "TNT_AU",
              "TNT_CN",
              "TNT_CLICK_IT",
              "TNT_FR",
              "TNT_DE",
              "TNT_IT",
              "TNT_JP",
              "TNT_NL",
              "TNT_PL",
              "TNT_ES",
              "TNT_UK",
              "TPG",
              "TAIWAN_POST_TW",
              "TAQBIN_HK",
              "TAQBIN_MY",
              "TAQBIN_SG",
              "TAXIPOST",
              "TELIWAY",
              "THAILAND_POST",
              "THE_COURIER_GUY",
              "TIKI_ID",
              "TOLL_IPEC",
              "TWO_GO",
              "TRANSMISSION",
              "UK_MAIL",
              "UPS_MI",
              "VIETNAM_POST",
              "WAHANA_ID",
              "XEND_EXPRESS_PH",
              "XPRESSBEES",
              "YAMATO",
              "YANWEN_CN",
              "YODEL",
              "UPS_CANADA",
              "UPS_MAIL_INNOVATIONS",
              "DE_DELTEC",
              "DE_INTERNATIONALSEUR",
              "FR_DPD",
              "FR_IMX",
              "IT_IMX",
              "AU_DTDC",
              "AU_SENDLE",
              "AU_SKYNET",
              "ES_GLS",
              "ES_INTERNATIONALSEUR",
              "ES_IMX",
              "CN_HUAHANEXPRESS",
              "LOCAL_PICKUP",
              "HK_DPEX",
              "HK_KERRYEXPRESS",
              "HK_LOGISTICSWORLDWIDEEXPRESS",
              "HK_RPX",
              "HK_SPREADEL",
              "IN_SPREADEL",
              "TH_CJ",
              "KR_LOGISTICSWORLDWIDE",
              "AT_DHL",
              "BE_IMX",
              "MY_LOGISTICSWORLDWIDE",
              "MY_JETSHIP",
              "SG_DHL",
              "SG_SPREADEL",
              "POSTAROMANA",
              "US_PUROLATOR",
              "US_FASTWAY",
              "CHRONOPOST",
              "CORREOS_DE_ESPANA",
              "DEUTSCHE_POST_DHL",
              "EBOOST_SDA",
              "HONGKONG_POST",
              "INTANGIBLE_DIGITAL_SERVICES",
              "LA_POSTE",
              "LA_POSTE_SUIVI",
              "NEKO_YAMATO_UNYUU",
              "NITTSU_PELICAN_BIN",
              "POSTE_ITALIA",
              "SAGAWA_KYUU_BIN",
              "STAR_TRACK_EXPRESS",
              "US_DTDC",
              "US_STARTRACK",
              "ISR_ISRAEL_POST",
              "BE_MONDIAL",
              "B_2_CEUROPE",
              "PHL_2_GO",
              "PHL_AIR_21",
              "PT_SPANISH_SEUR",
              "ES_SPANISH_SEUR",
              "SG_DPEX",
              "CH_IMX",
              "DHLG",
              "RUSTON",
              "MIKROPAKKET",
              "XPOST",
              "PAN_ASIA",
              "PARCELONE",
              "SPEEDEE",
              "VENIPAK",
              "CROSHOT",
              "SHREENANDANCOURIER",
              "EPST_GLBL",
              "NEWGISTICS",
              "POST_SLOVENIA",
              "JERSEY_POST",
              "WMG",
              "BOMBINOEXP",
              "XQ_EXPRESS",
              "FURDECO",
              "LEGION_EXPRESS",
              "YDH_EXPRESS",
              "LHT_EXPRESS",
              "SOUTH_AFRICAN_POST_OFFICE",
              "GRUPO",
              "SPOTON",
              "DIMERCO",
              "INTERPARCEL_UK",
              "ABCUSTOM",
              "IND_DELIVREE",
              "GLOBAL_ABF",
              "CN_BESTEXPRESS",
              "DX_SFTP",
              "PICKUPP_MYS",
              "XPERT_DELIVERY",
              "FMX",
              "HELLMANN",
              "DHL_REFR",
              "DHL_HK",
              "SHIP_IT_ASIA",
              "KERRY_ECOMMERCE",
              "GOJEK",
              "FRETERAPIDO",
              "YODEL_INTNL",
              "CFL_LOGISTICS",
              "PITNEY_BOWES",
              "ZA_SPECIALISED_FREIGHT",
              "JANCO",
              "XPRESSEN_DK",
              "YTO",
              "RPD2MAN",
              "SEUR_SP_API",
              "DELIVERYONTIME",
              "WISE_EXPRESS",
              "JINSUNG",
              "JTEXPRESS_VN",
              "CHUKOU1",
              "TRANS_KARGO",
              "FEDEX_INTL_MLSERV",
              "SWISHIP_DE",
              "IVOY_WEBHOOK",
              "AIRMEE_WEBHOOK",
              "VAMOX",
              "FIRSTMILE",
              "AMS_GRP",
              "FASTWAY_IR",
              "HH_EXP",
              "HRPARCEL",
              "MYS_MYPOST_ONLINE",
              "GESWL",
              "BLUESTAR",
              "TIPSA",
              "CDEK_TR",
              "KGMHUB",
              "INTEXPRESS",
              "DESCARTES",
              "OVERSE_EXP",
              "ONECLICK",
              "ROADRUNNER_FREIGHT",
              "GLS_CROTIA",
              "TOURLINE",
              "MRW_FTP",
              "BH_WORLDWIDE",
              "BLUEX",
              "DYLT",
              "OCS",
              "YINGNUO_LOGISTICS",
              "SIN_GLBL",
              "TUFFNELLS_REFERENCE",
              "CJPACKET",
              "MILKMAN",
              "FIEGE_NL",
              "ASIGNA",
              "ONEWORLDEXPRESS",
              "LTIANEXP",
              "KWE_GLOBAL",
              "CTC_EXPRESS",
              "LAO_POST",
              "EU_IMX",
              "GLS_SLOV",
              "AMAZON",
              "MORE_LINK",
              "JX",
              "MYS_EMS",
              "EASY_MAIL",
              "ADUIEPYLE",
              "GB_PANTHER",
              "SG_DETRACK",
              "EXPRESSSALE",
              "DICOM",
              "MATDESPATCH",
              "TRUNKRS_WEBHOOK",
              "WESTBANK_COURIER",
              "MBW",
              "KHM_CAMBODIA_POST",
              "FEDEX_CROSSBORDER",
              "JANIO",
              "SINOTRANS",
              "BRT_IT_PARCELID",
              "A1POST",
              "DHL_SUPPLY_CHAIN",
              "TAZMANIAN_FREIGHT",
              "TOPYOU",
              "PALEXPRESS",
              "SAIA_FREIGHT",
              "CN_WEDO",
              "FULFILLME",
              "SG_QXPRESS",
              "UPS_REFERENCE",
              "NHANS_SOLUTIONS",
              "CARIBOU",
              "LOCUS_WEBHOOK",
              "DSV",
              "CN_GOFLY",
              "COORDINADORA",
              "P2P_TRC",
              "ANDREANI",
              "DIRECTPARCELS",
              "DOORA",
              "FEDEX_POLAND",
              "INTERPARCEL_NZ",
              "XDP_UK_REFERENCE",
              "ETOMARS",
              "CN_JCEX",
              "IND_ECOM",
              "FAR_INTERNATIONAL",
              "ESP_ENVIALIA",
              "IDEXPRESS",
              "GANGBAO",
              "SMSA_EXPRESS",
              "NEWAY",
              "DEX_I",
              "DESIGNERTRANSPORT_WEBHOOK",
              "BUDBEE_WEBHOOK",
              "GLS_SLOVEN",
              "PARCELLED_IN",
              "COPA_COURIER",
              "GSI_EXPRESS",
              "CON_WAY",
              "BROUWER_TRANSPORT",
              "TOLL_NZ",
              "CPEX",
              "ECHO",
              "FEDEX_FR",
              "XDE_WEBHOOK",
              "TOLOS",
              "BORDEREXPRESS",
              "GIAO_HANG",
              "MAILPLUS_JPN",
              "GEODIS_ESPACE",
              "TNT_UK_REFR",
              "DOORDASH_WEBHOOK",
              "KEC",
              "CJ_HK_INTERNATIONAL",
              "HELTHJEM",
              "ZA_COURIERIT",
              "SFB2C",
              "FREIGHTQUOTE",
              "FR_EXAPAQ",
              "LANDMARK_GLOBAL_REFERENCE",
              "PARCEL2GO",
              "DELNEXT",
              "TCK_EXPRESS",
              "ENDEAVOUR_DELIVERY",
              "NANJINGWOYUAN",
              "HEPPNER_FR",
              "PICKRR",
              "FONSEN",
              "APC_OVERNIGHT_CONNUM",
              "STAR_TRACK_NEXT_FLIGHT",
              "UPS_FREIGHT",
              "DAJIN",
              "POSTA_PLUS",
              "CEVA",
              "ORANGE_DS",
              "ANSERX",
              "JS_EXPRESS",
              "PADTF",
              "GAC",
              "EZSHIP",
              "GEIS",
              "SYPOST",
              "AMAZON_SHIP_MCF",
              "SF_EX",
              "YUSEN",
              "ESP_MRW",
              "BRING",
              "PAGO",
              "AO_COURIER",
              "GBA",
              "DIAMOND_EUROGISTICS",
              "NEWEGGEXPRESS",
              "LALAMOVE",
              "SPEEDCOURIERS_GR",
              "CORPORATECOURIERS_WEBHOOK",
              "FORRUN",
              "PICKUP",
              "BOND",
              "ECMS",
              "INTELIPOST",
              "SK_POSTA",
              "FLASHEXPRESS",
              "FETCHR_WEBHOOK",
              "CN_STO",
              "SEKO_SFTP",
              "THEDELIVERYGROUP",
              "CELLO_SQUARE",
              "HOME_DELIVERY_SOLUTIONS",
              "DPD_HGRY",
              "KERRYTTC_VN",
              "TARRIVE",
              "JOYING_BOX",
              "COLLIVERY",
              "TOTAL_EXPRESS",
              "ZJS_EXPRESS",
              "STARKEN",
              "MAINFREIGHT",
              "IND_FIRSTFLIGHT",
              "BE_BPOST",
              "DEMANDSHIP",
              "CN_DPEX",
              "ACSWORLDWIDE",
              "LOGISTERS",
              "GOGLOBALPOST",
              "AMSTAN",
              "OKAYPARCEL",
              "I_DIKA",
              "ENVIALIA_REFERENCE",
              "PAACK_WEBHOOK",
              "GRAB_WEBHOOK",
              "PARCELPOINT",
              "ICUMULUS",
              "FDSEXPRESS",
              "DAIGLOBALTRACK",
              "CNDEXPRESS",
              "GLOBAL_IPARCEL",
              "AMAZON_FBA_SWISHIP",
              "WYNGS",
              "YURTICI_KARGO",
              "CN_PAYPAL_PACKAGE",
              "PARCEL_2_POST",
              "ZYLLEM",
              "VIA_EXPRESS",
              "WIZMO",
              "TIGFREIGHT",
              "PIL_LOGISTICS",
              "ZTO_EXPRESS",
              "HEPPNER",
              "GENERAL_OVERNIGHT",
              "HAPPY2POINT",
              "ARCO_SPEDIZIONI",
              "CHITCHATS",
              "IML",
              "SMOOTH",
              "INTEL_VALLEY",
              "CLE_LOGISTICS",
              "FIEGE",
              "MX_CARGO",
              "ZIINGFINALMILE",
              "TCS",
              "DAYTON_FREIGHT",
              "ROADBULL",
              "YODEL_DIR",
              "STONE3PL",
              "PARCELPAL_WEBHOOK",
              "DHL_ECOMERCE_ASA",
              "SIMPLYPOST",
              "KY_EXPRESS",
              "SHENZHEN",
              "UC_EXPRE",
              "US_LASERSHIP",
              "DIDADI",
              "DYNALOGIC",
              "DBSCHENKER_B2B",
              "MXE",
              "PFCEXPRESS",
              "WHISTL",
              "CAE_DELIVERS",
              "WEPOST",
              "ALLIEDEXPRESS",
              "SHIPPIT",
              "DDEXPRESS",
              "ARAMEX_AU",
              "TFM",
              "BNEED",
              "M_XPRESS",
              "HK_TGX",
              "LATVIJAS_PASTS",
              "HDB_BOX",
              "VIAEUROPE",
              "CORREO_UY",
              "CLEVY_LINKS",
              "IBEONE",
              "J_NET",
              "RCL",
              "6LS",
              "CGS_EXPRESS",
              "BLR_BELPOST",
              "BIRDSYSTEM",
              "DOBROPOST",
              "SAP_EXPRESS",
              "WEASHIP",
              "SONICTL",
              "KWT",
              "AFLLOG_FTP",
              "IND_SAFEEXPRESS",
              "TOPHATTEREXPRESS",
              "SEINO",
              "MGLOBAL",
              "SZENDEX",
              "AVERITT",
              "DBSCHENKER_SV",
              "LEADER",
              "AO_DEUTSCHLAND",
              "2EBOX",
              "EU_FLEET_SOLUTIONS",
              "SG_SPEEDPOST",
              "PCFCORP",
              "AERONET",
              "LINKBRIDGE",
              "DE_DEUTSCHE_POST_DHL_WITHIN_EUROPE_TRACKNET",
              "PRIMAMULTICIPTA",
              "ISR_POST_DOMESTIC",
              "COUREX",
              "ZAJIL_EXPRESS",
              "BESTWAYPARCEL",
              "COLLECTCO",
              "AEX",
              "JTEXPRESS",
              "FEDEX_UK",
              "USHIP",
              "ROUTIFIC_WEBHOOK",
              "GLOBAL_EXPRESS",
              "BRT_IT_SENDER_REF",
              "GLOBAVEND",
              "PIXSELL",
              "SHIPTOR",
              "CDEK",
              "VNM_VIETTELPOST",
              "PHL_AIR21",
              "PALLET_NETWORK",
              "CJ_CENTURY",
              "UK_XDP",
              "GSO",
              "VIWO",
              "SKYBOX",
              "PAPER_EXPRESS",
              "KERRYTJ",
              "NTLOGISTICS_VN",
              "SDH_SCM",
              "PALLETWAYS",
              "NOX_NACHTEXPRESS",
              "ZINC",
              "DPE_SOUTH_AFRC",
              "LOGISTIKA",
              "CELERITAS",
              "PRESSIODE",
              "SHREE_MARUTI",
              "PARCELINKLOGISTICS",
              "EFEX",
              "LOTTE",
              "LONESTAR",
              "GB_NORSK",
              "APRISAEXPRESS",
              "BEL_RS",
              "OSM_WORLDWIDE",
              "SAILPOST",
              "MAILAMERICAS",
              "WESTGATE_GL",
              "DTD_EXPR",
              "ALFATREX",
              "THABIT_LOGISTICS",
              "PROMEDDELIVERY",
              "PAQUETEXPRESS",
              "NEWZEALAND_COURIERS",
              "LIEFERY",
              "JOOM_LOGIS",
              "STRECK_TRANSPORT",
              "HCT_LOGISTICS",
              "ZA_FASTWAY",
              "CARRY_FLAP",
              "PONY_EXPRESS",
              "US_OLD_DOMINION",
              "ANICAM_BOX",
              "ALWAYS_EXPRESS",
              "WANBEXPRESS",
              "AUS_STARTRACK",
              "GBS_BROKER",
              "STALLIONEXPRESS",
              "RAIDEREX",
              "ALLJOY",
              "SHOPFANS",
              "KYUNGDONG_PARCEL",
              "CHAMPION_LOGISTICS",
              "PICKUPP_SGP",
              "DEALERSEND",
              "MORNING_EXPRESS",
              "NACEX",
              "THENILE_WEBHOOK",
              "JOCOM",
              "HOLISOL",
              "LBCEXPRESS_FTP",
              "CSE",
              "TFORCE_FINALMILE",
              "KURASI",
              "GEMWORLDWIDE",
              "SHIP_GATE",
              "USF_REDDAWAY",
              "SHIPTER",
              "NATIONAL_SAMEDAY",
              "APG",
              "CN_BOXC",
              "YUNEXPRESS",
              "INTEGRA2_FTP",
              "CAINIAO",
              "ECOSCOOTING",
              "DMS_MATRIX",
              "MAINWAY",
              "ASENDIA_USA",
              "PAPERFLY",
              "HOUNDEXPRESS",
              "3JMSLOGISTICS",
              "EP_BOX",
              "BOX_BERRY",
              "LICCARDI_EXPRESS",
              "PLUS_LOG_UK",
              "FULFILLA",
              "SKY_POSTAL",
              "ASE",
              "CNWANGTONG",
              "PITTOHIO",
              "MAIL_PLUS",
              "XPO_LOGISTICS",
              "WNDIRECT",
              "CLOUDWISH_ASIA",
              "ZELERIS",
              "MARA_XPRESS",
              "GIO_EXPRESS",
              "OCS_WORLDWIDE",
              "DESTINY",
              "ARK_LOGISTICS",
              "DE_DPD_DELISTRACK",
              "COMET_TECH",
              "DHL_PARCEL_RU",
              "AQUILINE",
              "PILOT_FREIGHT",
              "TNT_REFR",
              "QWINTRY",
              "DANSKE_FRAGT",
              "SHREE_ANJANI_COURIER",
              "CARRIERS",
              "AIR_CANADA_GLOBAL",
              "PRESIDENT_TRANS",
              "STEPFORWARDFS",
              "ESHIPPING",
              "SHREETIRUPATI",
              "HX_EXPRESS",
              "INDOPAKET",
              "CN_17POST",
              "K1_EXPRESS",
              "CJ_GLS",
              "MYS_GDEX",
              "NATIONEX",
              "CN_EQUICK",
              "ANJUN",
              "VIRTRANSPORT",
              "FARGOOD",
              "SMG_EXPRESS",
              "RZYEXPRESS",
              "SEFL",
              "HIPSHIPPER",
              "HDB",
              "RPXLOGISTICS",
              "MIKROPAKKET_BE",
              "KUEHNE",
              "IT_NEXIVE",
              "PTS",
              "ETS_EXPRESS",
              "SWISS_POST_FTP",
              "COLIS_PRIVE",
              "FASTRK_SERV",
              "4_72",
              "US_YRC",
              "CN_YUNDA",
              "POSTNL_INTL_3S",
              "AAA_COOPER",
              "ELIAN_POST",
              "CUBYN",
              "SAU_SAUDI_POST",
              "360LION",
              "ABXEXPRESS_MY",
              "NINJAVAN_WB",
              "ESP_PACKLINK",
              "IND_JAYONEXPRESS",
              "GB_ARROW",
              "ZES_EXPRESS",
              "IND_GOJAVAS",
              "ZEPTO_EXPRESS",
              "SKYNET_ZA",
              "KPOST",
              "ZEEK_2_DOOR",
              "DHL_FREIGHT",
              "BLUECARE",
              "BLINKLASTMILE",
              "POSTA_UKR",
              "LOGISTYX_TRANSGROUP",
              "JINDOUYUN",
              "CHROBINSON",
              "TRACKON",
              "CN_POST56",
              "GB_TUFFNELLS",
              "COURANT_PLUS",
              "SCUDEX_EXPRESS",
              "SHIPENTEGRA",
              "TRUMPCARD",
              "CHOIR_EXP",
              "ETOTAL",
              "COPE",
              "SFPLUS_WEBHOOK",
              "IND_GATI",
              "HERMES_2MANN_HANDLING",
              "CN_WISHPOST",
              "GLOBALTRANZ",
              "HKD",
              "UDS",
              "BJSHOMEDELIVERY",
              "YAKIT",
              "LEXSHIP",
              "OMNIVA",
              "SUTTON",
              "COSTMETICSNOW",
              "PANTHER_REFERENCE",
              "SFCSERVICE",
              "PFLOGISTICS",
              "LTL",
              "LOOMIS_EXPRESS",
              "PARKNPARCEL",
              "SPRING_GDS",
              "GLS_ITALY",
              "ECEXPRESS",
              "LINE",
              "INTERPARCEL_AU",
              "GEL_EXPRESS",
              "AGILITY",
              "XL_EXPRESS",
              "ADERONLINE",
              "DIRECTCOURIERS",
              "PLANZER",
              "NOX_NIGHT_TIME_EXPRESS",
              "SENDING",
              "HUODULL"
            ]
          },
          "carrier_name_other": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "The name of carrier in free-form text for unavailable carriers. This field is mandatory when <code>carrier_name</code> is <code>OTHER</code>."
          },
          "tracking_url": {
            "type": "string",
            "format": "uri",
            "description": "The URL to track the dispute-related transaction shipment."
          },
          "tracking_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "The number to track the dispute-related transaction shipment."
          }
        },
        "required": [
          "carrier_name",
          "tracking_number"
        ]
      },
      "evidence_info": {
        "type": "object",
        "title": "Evidence Information",
        "description": "The evidence-related information.",
        "properties": {
          "tracking_info": {
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "description": "An array of relevant tracking information for the transaction involved in this dispute.",
            "items": {
              "$ref": "#/components/schemas/tracking_info"
            }
          },
          "refund_ids": {
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "description": "An array of refund IDs for the transaction involved in this dispute.",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "description": "The ID of the refunded transaction."
            }
          }
        }
      },
      "action_info": {
        "type": "object",
        "title": "Evidence Extensions",
        "description": "The extended properties for a evidence. Includes additional information such as the action for which the evidence was requested/submitted, and whether the evidence is mandatory.",
        "properties": {
          "action": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Z_]+$",
            "description": "The action for which the evidence was requested or submitted.",
            "enum": [
              "ACKNOWLEDGE_RETURN_ITEM",
              "ACCEPT_CLAIM",
              "PROVIDE_EVIDENCE",
              "APPEAL",
              "CANCEL",
              "CHANGE_REASON",
              "ESCALATE"
            ]
          },
          "response_option": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Z_]+$",
            "description": "The response option for the corresponding action. Possible values:<ul><li><a href=\"/docs/api/customer-disputes/v1/#definition-acknowledgement_type\">Acknowledgement Types</a></li><li><a href=\"/docs/api/customer-disputes/v1/#definition-response-accept_claim_type\">Accept Claim types</a></li></ul>."
          },
          "mandatory": {
            "type": "boolean",
            "description": "Indicates whether the evidence is mandatory for the corresponding action and response option."
          }
        }
      },
      "evidence": {
        "type": "object",
        "title": "Evidence",
        "description": "A merchant- or customer-submitted evidence document. evidence_info is expected for PROOF_OF_FULFILLMENT,PROOF_OF_REFUND and PROOF_OF_RETURN evidence types. documents and notes can be given for rest of the evidence types.",
        "properties": {
          "evidence_type": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The evidence type.",
            "enum": [
              "PROOF_OF_FULFILLMENT",
              "PROOF_OF_REFUND",
              "PROOF_OF_DELIVERY_SIGNATURE",
              "PROOF_OF_RECEIPT_COPY",
              "RETURN_POLICY",
              "BILLING_AGREEMENT",
              "PROOF_OF_RESHIPMENT",
              "ITEM_DESCRIPTION",
              "POLICE_REPORT",
              "AFFIDAVIT",
              "PAID_WITH_OTHER_METHOD",
              "COPY_OF_CONTRACT",
              "TERMINAL_ATM_RECEIPT",
              "PRICE_DIFFERENCE_REASON",
              "SOURCE_CONVERSION_RATE",
              "BANK_STATEMENT",
              "CREDIT_DUE_REASON",
              "REQUEST_CREDIT_RECEIPT",
              "PROOF_OF_RETURN",
              "CREATE",
              "CHANGE_REASON",
              "PROOF_OF_REFUND_OUTSIDE_PAYPAL",
              "RECEIPT_OF_MERCHANDISE",
              "CUSTOMS_DOCUMENT",
              "CUSTOMS_FEE_RECEIPT",
              "INFORMATION_ON_RESOLUTION",
              "ADDITIONAL_INFORMATION_OF_ITEM",
              "DETAILS_OF_PURCHASE",
              "PROOF_OF_SIGNIFICANT_DIFFERENCE",
              "PROOF_OF_SOFTWARE_OR_SERVICE_NOT_AS_DESCRIBED",
              "PROOF_OF_CONFISCATION",
              "PROOF_OF_DAMAGE",
              "COPY_OF_LAW_ENFORCEMENT_AGENCY_REPORT",
              "ADDITIONAL_PROOF_OF_SHIPMENT",
              "PROOF_OF_DENIAL_BY_CARRIER",
              "THIRDPARTY_PROOF_FOR_DAMAGE_OR_SIGNIFICANT_DIFFERENCE",
              "VALID_SUPPORTING_DOCUMENT",
              "LEGIBLE_SUPPORTING_DOCUMENT",
              "RETURN_TRACKING_INFORMATION",
              "DELIVERY_RECEIPT",
              "PROOF_OF_INSTORE_RECEIPT",
              "ADDITIONAL_TRACKING_INFORMATION",
              "PROOF_OF_SHIPMENT_POSTAGE",
              "ONLINE_TRACKING_INFORMATION",
              "PROOF_OF_INSTORE_REFUND",
              "PROOF_FOR_SOFTWARE_OR_SERVICE_DELIVERED",
              "RETURN_ADDRESS_FOR_SHIPPING",
              "COPY_OF_THE_EPARCEL_MANIFEST",
              "COPY_OF_SHIPPING_MANIFEST",
              "APPEAL_AFFIDAVIT",
              "RECEIPT_OF_REPLACEMENT",
              "COPY_OF_DRIVERS_LICENSE",
              "ACCOUNT_CHANGE_INFORMATION",
              "DELIVERY_ADDRESS",
              "CONFIRMATION_OF_RESOLUTION",
              "MERCHANT_RESPONSE",
              "PERMISSION_DESCRIPTION",
              "STATUS_OF_MERCHANDISE",
              "LOST_CARD_DETAILS",
              "LAST_VALID_TRANSACTION_DETAILS",
              "ADDITIONAL_PROOF_OF_RETURN",
              "DECLARATION",
              "PROOF_OF_MISSING_ITEMS",
              "PROOF_OF_EMPTY_PACKAGE_OR_DIFFERENT_ITEM",
              "PROOF_OF_ITEM_NOT_RECEIVED",
              "ORDER_DETAILS",
              "LISTING_URL",
              "SHIPPING_INSURANCE",
              "BUYER_RESPONSE",
              "PHOTOS_OF_SHIPPED_ITEM",
              "OTHER"
            ]
          },
          "evidence_info": {
            "$ref": "#/components/schemas/evidence_info"
          },
          "documents": {
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "description": "An array of evidence documents.",
            "items": {
              "$ref": "#/components/schemas/document"
            }
          },
          "notes": {
            "type": "string",
            "description": "Any evidence-related notes.",
            "minLength": 1,
            "maxLength": 2000
          },
          "source": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Z_]+$",
            "readOnly": true,
            "description": "The source of the evidence.",
            "enum": [
              "REQUESTED_FROM_BUYER",
              "REQUESTED_FROM_SELLER",
              "SUBMITTED_BY_BUYER",
              "SUBMITTED_BY_SELLER",
              "SUBMITTED_BY_PARTNER"
            ]
          },
          "date": {
            "readOnly": true,
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time when the evidence was received, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6)."
          },
          "item_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9]+$",
            "description": "The item ID. If the merchant provides multiple pieces of evidence and the transaction has multiple item IDs, the merchant can use this value to associate a piece of evidence with an item ID."
          },
          "item_type": {
            "readOnly": true,
            "description": "The item type for which the evidence is requested or submitted.",
            "$ref": "#/components/schemas/item_type"
          },
          "action_info": {
            "readOnly": true,
            "description": "The action details for the information. Includes additional information such as the action for which the evidence was requested/submitted, and whether the evidence is mandatory for the corresponding action.",
            "$ref": "#/components/schemas/action_info"
          },
          "dispute_life_cycle_stage": {
            "readOnly": true,
            "description": "The dispute life cycle stage for the evidence.",
            "$ref": "#/components/schemas/dispute_lifecycle_stage"
          }
        }
      },
      "offer_type": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[0-9A-Z_]+$",
        "title": "Offer Type",
        "description": "The merchant-proposed offer type for the dispute.",
        "enum": [
          "REFUND",
          "REFUND_WITH_RETURN",
          "REFUND_WITH_REPLACEMENT",
          "REPLACEMENT_WITHOUT_REFUND"
        ]
      },
      "offer_history": {
        "type": "object",
        "title": "Offer History",
        "description": "The offer history.",
        "properties": {
          "offer_time": {
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time when the event occurred, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6)."
          },
          "actor": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The event-related actor.",
            "enum": [
              "BUYER",
              "SELLER"
            ]
          },
          "event_type": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The type of the history event.",
            "enum": [
              "PROPOSED",
              "ACCEPTED",
              "DENIED"
            ]
          },
          "offer_type": {
            "$ref": "#/components/schemas/offer_type"
          },
          "offer_amount": {
            "description": "The offer amount.",
            "$ref": "#/components/schemas/money"
          },
          "notes": {
            "type": "string",
            "readOnly": true,
            "description": "The user submitted notes.",
            "minLength": 1,
            "maxLength": 2000
          },
          "dispute_life_cycle_stage": {
            "readOnly": true,
            "description": "The dispute life cycle stage during the offer event.",
            "$ref": "#/components/schemas/dispute_lifecycle_stage"
          }
        }
      },
      "offer": {
        "type": "object",
        "title": "Offer",
        "description": "The merchant-proposed offer for a dispute.",
        "properties": {
          "buyer_requested_amount": {
            "description": "The customer-requested refund for this dispute.",
            "$ref": "#/components/schemas/money"
          },
          "seller_offered_amount": {
            "description": "The merchant-offered refund for this dispute.",
            "$ref": "#/components/schemas/money"
          },
          "offer_type": {
            "$ref": "#/components/schemas/offer_type"
          },
          "history": {
            "type": "array",
            "minItems": 1,
            "maxItems": 1000,
            "description": "An array of history information for an offer.",
            "items": {
              "$ref": "#/components/schemas/offer_history"
            }
          }
        }
      },
      "refund_details": {
        "type": "object",
        "title": "Refund Details",
        "description": "The refund details.",
        "properties": {
          "allowed_refund_amount": {
            "$ref": "#/components/schemas/money",
            "description": "The maximum refundable amount."
          }
        }
      },
      "communication_details": {
        "type": "object",
        "title": "Contact Details",
        "description": "The contact details that a merchant provides to the customer to use to share their evidence documents.",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/email_address",
            "description": "The email address that is provided by the merchant where the customer can share the evidences."
          },
          "note": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "The merchant provided notes that are visible to both the customer and PayPal."
          },
          "time_posted": {
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time when the contact details were posted, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "readOnly": true
          }
        }
      },
      "supporting_info": {
        "type": "object",
        "title": "Supporting Info",
        "description": "A merchant- or customer-submitted supporting information.",
        "properties": {
          "notes": {
            "type": "string",
            "readOnly": true,
            "description": "Any supporting notes.",
            "minLength": 1,
            "maxLength": 2000
          },
          "documents": {
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "readOnly": true,
            "description": "An array of metadata for the documents which were uploaded as supporting information for the dispute.",
            "items": {
              "$ref": "#/components/schemas/document"
            }
          },
          "source": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "readOnly": true,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The source of the Information.",
            "enum": [
              "SUBMITTED_BY_BUYER",
              "SUBMITTED_BY_SELLER",
              "SUBMITTED_BY_PARTNER"
            ]
          },
          "provided_time": {
            "readOnly": true,
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time when the information was received, in [Internet date and time format](http://tools.ietf.org/html/rfc3339#section-5.6)."
          },
          "dispute_life_cycle_stage": {
            "readOnly": true,
            "description": "The dispute life cycle stage for the supporting info.",
            "$ref": "#/components/schemas/dispute_lifecycle_stage"
          }
        }
      },
      "acknowledgement_type": {
        "type": "string",
        "title": "Allowed Acknowledgement Type",
        "description": "The type of acknowledgement allowed for the merchant after the customer has returned the item. The merchant can update whether the item was received and is as expected or if the item was not received.",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[0-9A-Z_]+$",
        "readOnly": true,
        "enum": [
          "ITEM_RECEIVED",
          "ITEM_NOT_RECEIVED",
          "DAMAGED",
          "EMPTY_PACKAGE_OR_DIFFERENT",
          "MISSING_ITEMS"
        ]
      },
      "acknowledge_return_item_response_options": {
        "type": "object",
        "title": "Acknowledge Return Item Response Options",
        "description": "The allowed response options when the seller acknowledges that the buyer has returned an item for the dispute.",
        "properties": {
          "acknowledgement_types": {
            "type": "array",
            "description": "The types of response when the merchant acknowledges a returned item.",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "$ref": "#/components/schemas/acknowledgement_type"
            }
          }
        }
      },
      "accept_claim_type": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "^[0-9A-Z_]+$",
        "title": "Accept Claim Type",
        "description": "The refund type proposed by the merchant for the dispute.",
        "enum": [
          "REFUND",
          "REFUND_WITH_RETURN",
          "PARTIAL_REFUND",
          "REFUND_WITH_RETURN_SHIPMENT_LABEL"
        ]
      },
      "accept_claim_response_options": {
        "type": "object",
        "title": "Accept Claim Response Options",
        "description": "The allowed response options when the merchant is accepting the claim.",
        "properties": {
          "accept_claim_types": {
            "type": "array",
            "description": "The types of refund the merchant can provide the customer.",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "$ref": "#/components/schemas/accept_claim_type"
            }
          }
        }
      },
      "make_offer_response_options": {
        "type": "object",
        "title": "Make Offer Response Options",
        "description": "The allowed response options when the merchant makes offer to the customer.",
        "properties": {
          "offer_types": {
            "type": "array",
            "description": "The types of offer the merchant can offer the customer.",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "$ref": "#/components/schemas/offer_type"
            }
          }
        }
      },
      "allowed_response_options": {
        "type": "object",
        "title": "Allowed Response Options",
        "description": "The allowed response options for the buyer/seller update actions.",
        "properties": {
          "acknowledge_return_item": {
            "$ref": "#/components/schemas/acknowledge_return_item_response_options"
          },
          "accept_claim": {
            "$ref": "#/components/schemas/accept_claim_response_options"
          },
          "make_offer": {
            "$ref": "#/components/schemas/make_offer_response_options"
          }
        }
      },
      "dispute": {
        "type": "object",
        "title": "Dispute Details",
        "description": "The dispute details.",
        "properties": {
          "dispute_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[A-Za-z0-9-]+$",
            "readOnly": true,
            "description": "The ID of the dispute."
          },
          "create_time": {
            "readOnly": true,
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time when the dispute was created, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`."
          },
          "update_time": {
            "readOnly": true,
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time when the dispute was last updated, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`."
          },
          "disputed_transactions": {
            "type": "array",
            "minItems": 1,
            "maxItems": 1000,
            "description": "An array of transactions for which disputes were created.",
            "items": {
              "$ref": "#/components/schemas/transaction_info"
            }
          },
          "reason": {
            "$ref": "#/components/schemas/dispute_reason"
          },
          "status": {
            "readOnly": true,
            "$ref": "#/components/schemas/status"
          },
          "dispute_amount": {
            "$ref": "#/components/schemas/money",
            "description": "The amount in the transaction that the customer originally disputed. Because customers can sometimes dispute only part of the payment, the disputed amount might be different from the total gross or net amount of the original transaction."
          },
          "dispute_asset": {
            "description": "The asset in the transaction that the customer disputed.",
            "$ref": "#/components/schemas/cryptocurrency"
          },
          "fee_policy": {
            "readOnly": true,
            "description": "Policy that determines whether the fee needs to be charged, retained or returned while moving the money as part of dispute process.",
            "$ref": "#/components/schemas/fee_policy"
          },
          "external_reason_code": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "The code that identifies the reason for the credit card chargeback. Each card issuer follows their own standards for defining reason type, code, and its format. For more details about the external reason code, see the card issue site. Available for only unbranded transactions."
          },
          "dispute_outcome": {
            "readOnly": true,
            "$ref": "#/components/schemas/dispute_outcome"
          },
          "adjudications": {
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "description": "The Teammate Adjudication details for the dispute.",
            "items": {
              "$ref": "#/components/schemas/adjudication"
            }
          },
          "money_movements": {
            "type": "array",
            "minItems": 1,
            "maxItems": 50,
            "description": "The Money movement details for the dispute.",
            "items": {
              "$ref": "#/components/schemas/money_movement"
            }
          },
          "dispute_life_cycle_stage": {
            "readOnly": true,
            "$ref": "#/components/schemas/dispute_lifecycle_stage"
          },
          "dispute_channel": {
            "$ref": "#/components/schemas/dispute_channel"
          },
          "messages": {
            "type": "array",
            "minItems": 1,
            "maxItems": 1000,
            "description": "An array of customer- or merchant-posted messages for the dispute.",
            "items": {
              "$ref": "#/components/schemas/message"
            }
          },
          "extensions": {
            "$ref": "#/components/schemas/extensions"
          },
          "evidences": {
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "description": "An array of evidence documents.",
            "items": {
              "$ref": "#/components/schemas/evidence"
            }
          },
          "buyer_response_due_date": {
            "readOnly": true,
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time by when the customer must respond to the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). If the customer does not respond by this date and time, the dispute is closed in the merchant's favor. For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`."
          },
          "seller_response_due_date": {
            "readOnly": true,
            "$ref": "#/components/schemas/date_time",
            "description": "The date and time by when the merchant must respond to the dispute, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). If the merchant does not respond by this date and time, the dispute is closed in the customer's favor. For example, *`yyyy`*-*`MM`*-*`dd`*`T`*`HH`*:*`mm`*:*`ss`*.*`SSS`*`Z`."
          },
          "offer": {
            "readOnly": true,
            "$ref": "#/components/schemas/offer"
          },
          "refund_details": {
            "readOnly": true,
            "$ref": "#/components/schemas/refund_details"
          },
          "communication_details": {
            "$ref": "#/components/schemas/communication_details"
          },
          "supporting_info": {
            "type": "array",
            "readOnly": true,
            "minItems": 1,
            "maxItems": 100,
            "description": "An array of all the supporting information that are associated to this dispute.",
            "items": {
              "$ref": "#/components/schemas/supporting_info"
            }
          },
          "allowed_response_options": {
            "readOnly": true,
            "$ref": "#/components/schemas/allowed_response_options"
          },
          "links": {
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/link_description",
              "readOnly": true
            }
          }
        }
      },
      "patch": {
        "type": "object",
        "title": "Patch",
        "description": "The JSON patch object to apply partial updates to resources.",
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation.",
            "enum": [
              "add",
              "remove",
              "replace",
              "move",
              "copy",
              "test"
            ]
          },
          "path": {
            "type": "string",
            "description": "The <a href=\"https://tools.ietf.org/html/rfc6901\">JSON Pointer</a> to the target document location at which to complete the operation."
          },
          "value": {
            "title": "Patch Value",
            "description": "The value to apply. The <code>remove</code> operation does not require a value."
          },
          "from": {
            "type": "string",
            "description": "The <a href=\"https://tools.ietf.org/html/rfc6901\">JSON Pointer</a> to the target document location from which to move the value. Required for the <code>move</code> operation."
          }
        },
        "required": [
          "op"
        ]
      },
      "patch_request": {
        "type": "array",
        "title": "Patch Request",
        "description": "An array of JSON patch objects to apply partial updates to resources.",
        "items": {
          "$ref": "#/components/schemas/patch"
        }
      },
      "subsequent_action": {
        "title": "Subsequent Action",
        "type": "object",
        "description": "The subsequent action.",
        "properties": {
          "links": {
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links/).",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/link_description",
              "readOnly": true
            }
          }
        }
      },
      "adjudicate": {
        "type": "object",
        "title": "Settle Request",
        "description": "A request to settle a dispute in either the customer's or merchant's favor.",
        "properties": {
          "adjudication_outcome": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The outcome of the adjudication.",
            "enum": [
              "BUYER_FAVOR",
              "SELLER_FAVOR"
            ]
          }
        },
        "required": [
          "adjudication_outcome"
        ]
      },
      "require_evidence": {
        "type": "object",
        "title": "Require Evidence Request",
        "description": "Sandbox only. Updates the state of a dispute, by ID, to either <code>WAITING_FOR_BUYER_RESPONSE</code> or <code>WAITING_FOR_SELLER_RESPONSE</code>. This state change enables either the customer or merchant to submit evidence for the dispute. Specify an <code>action</code> value in the JSON request body to indicate whether the state change enables the customer or merchant to submit evidence.",
        "properties": {
          "action": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": "^[0-9A-Z_]+$",
            "description": "The action. Indicates whether the state change enables the customer or merchant to submit evidence.",
            "enum": [
              "BUYER_EVIDENCE",
              "SELLER_EVIDENCE"
            ]
          }
        },
        "required": [
          "action"
        ]
      },
      "buyer_escalation_reason": {},
      "escalate": {
        "type": "object",
        "title": "Escalate Claim Request",
        "description": "A merchant request to escalate a dispute, by ID, to a PayPal claim.",
        "properties": {
          "note": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "The notes about the escalation of the dispute to a claim."
          },
          "buyer_escalation_reason": {
            "$ref": "#/components/schemas/buyer_escalation_reason"
          }
        },
        "required": [
          "note"
        ]
      },
      "make_offer": {
        "type": "object",
        "title": "Make Offer Request",
        "description": "A merchant request to make an offer to resolve a dispute.",
        "properties": {
          "note": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "The merchant's notes about the offer."
          },
          "offer_amount": {
            "description": "The amount proposed to resolve the dispute.",
            "$ref": "#/components/schemas/money"
          },
          "return_shipping_address": {
            "description": "The return address for the item. Required when the customer must return an item to the merchant for the <code>MERCHANDISE_OR_SERVICE_NOT_AS_DESCRIBED</code> dispute reason, especially if the refund amount is less than the dispute amount.",
            "$ref": "#/components/schemas/address_portable"
          },
          "invoice_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 127,
            "description": "The merchant-provided ID of the invoice for the refund. This optional value maps the refund to an invoice ID in the merchant's system.",
            "pattern": "^[A-Za-z0-9:\\-|]+$"
          },
          "offer_type": {
            "$ref": "#/components/schemas/offer_type"
          }
        },
        "required": [
          "note",
          "offer_type"
        ]
      },
      "accept_offer": {
        "type": "object",
        "title": "Accept Offer Request",
        "description": "A customer request to accept the offer made by the merchant.",
        "properties": {
          "note": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "The customer notes about accepting of offer. PayPal can but the merchant cannot view these notes."
          }
        }
      },
      "deny_offer": {
        "type": "object",
        "title": "Deny Offer Request",
        "description": "A customer request to deny the offer made by the merchant.",
        "properties": {
          "note": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "The customer notes about the denial of offer. PayPal can but the merchant cannot view these notes."
          }
        },
        "required": [
          "note"
        ]
      }
    },
    "examples": {
      "make_offer": {
        "value": {
          "note": "Offer refund with replacement item.",
          "offer_amount": {
            "currency_code": "USD",
            "value": "23"
          },
          "offer_type": "REFUND_WITH_REPLACEMENT"
        }
      },
      "escalate": {
        "value": {
          "note": "Escalating to PayPal claim for resolution."
        }
      },
      "accept_offer": {
        "value": {
          "note": "I am ok with the refund offered."
        }
      },
      "require_evidence": {
        "value": {
          "action": "BUYER_EVIDENCE"
        }
      },
      "adjudicate": {
        "value": {
          "adjudication_outcome": "BUYER_FAVOR"
        }
      },
      "deny_offer": {
        "value": {
          "note": "refund offer is very low."
        }
      },
      "patch_request": {
        "value": [
          {
            "op": "add",
            "path": "/partner_actions/-",
            "value": {
              "id": "AMX-22345",
              "name": "ACCEPT_DISPUTE",
              "create_time": "2018-01-12T10:41:35.000Z",
              "status": "PENDING"
            }
          }
        ]
      }
    }
  }
}
